<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://www.knime.org/2008/09/XMLConfig" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.knime.org/2008/09/XMLConfig http://www.knime.org/XMLConfig_2008_09.xsd" key="viewRepresentation">
    <entry key="jsNamespace" type="xstring" value="knimeConditionalBoxplot"/>
    <config key="jsCode">
        <entry key="array-size" type="xint" value="1"/>
        <entry key="0" type="xstring" value="/* global d3:false */%%00010window.knimeConditionalBoxplot = (function () {%%00010    var boxplot = {};%%00010    var _data = {};%%00010    var MIN_HEIGHT = 100;%%00010    var MIN_WIDTH = 100;%%00010    var maxY = 0;%%00010    var minY = 0;%%00010    var Y_TICK_COUNT = 5;%%00010    var Y_LABEL_MAX_WIDTH = 200;%%00010    %%00010    var _representation, _value, layoutContainer,%%00010        _switchMissValClassCbx, _missValClass,%%00010        drawChart, drawControls, processMissingValues, updateSubtitle, updateTitle,%%00010        compareCategories, resize;%%00010%%00010    var MISSING_VALUES_CLASS = 'Missing values';%%00010%%00010    var MISSING_VALUES_ONLY = 'missingValuesOnly';%%00010    var IGNORED_MISSING_VALUES = 'ignoredMissingValues';%%00010    var NO_DATA_AVAILABLE = 'noDataAvailable';%%00010    var NO_DATA_COLUMN = 'noDataColumn';%%00010%%00010%%00010    boxplot.init = function (representation, value) {%%00010        // Store value and representation for later%%00010        _value = value;%%00010        _representation = representation;%%00010%%00010        // No numeric columns available?%%00010        if (_representation.options.columns.length === 0) {%%00010            alert('No numeric columns selected');%%00010            return;%%00010        }%%00010%%00010        // If no column to show is selected yet, we take the first from all candidates%%00010        if (!_value.options.numCol) {%%00010            _value.options.numCol = _representation.options.columns[0];%%00010        }%%00010%%00010        d3.select('html').style('width', '100%').style('height', '100%');%%00010        d3.select('body').style('width', '100%').style('height', '100%');%%00010%%00010        var body = d3.select('body');%%00010%%00010        // Create container for our content%%00010        layoutContainer = body.append('div')%%00010            .attr('id', 'layoutContainer')%%00010            .attr('class', 'knime-layout-container')%%00010            .style('min-width', MIN_WIDTH + 'px')%%00010            .style('min-height', MIN_HEIGHT + 'px');%%00010%%00010        // Size layout container based on sizing settings%%00010        if (_representation.options.svg.fullscreen &amp;&amp; _representation.runningInView) {%%00010            layoutContainer.style('width', '100%')%%00010                .style('height', '100%');%%00010        } else {%%00010            layoutContainer.style('width', _representation.options.svg.width + 'px')%%00010                .style('height', _representation.options.svg.height + 'px');%%00010        }%%00010%%00010        var div = layoutContainer.append('div')%%00010            .attr('id', 'svgContainer')%%00010            .attr('class', 'knime-svg-container')%%00010            .style('min-width', MIN_WIDTH + 'px')%%00010            .style('min-height', MIN_HEIGHT + 'px');%%00010%%00010        // Add SVG element%%00010        var svg1 = document.createElementNS('http://www.w3.org/2000/svg', 'svg');%%00010        div[0][0].appendChild(svg1);%%00010%%00010        var d3svg = d3.select('svg');%%00010        // Add rectangle for background color%%00010        d3svg.append('rect')%%00010            .attr('id', 'bgr')%%00010            .attr('fill', _representation.options.backgroundColor);%%00010%%00010        // Append a group for the plot and add a rectangle for the data area background%%00010        d3svg.append('g')%%00010            .attr('id', 'plotG')%%00010            .append('rect')%%00010            .attr('id', 'da')%%00010            .attr('fill', _representation.options.daColor);%%00010%%00010        // Title%%00010        d3svg.append('text')%%00010            .attr('id', 'title')%%00010            .attr('class', 'knime-title')%%00010            .attr('x', 20)%%00010            .attr('y', 30)%%00010            .text(_value.options.title);%%00010%%00010        // Subtitle%%00010        d3svg.append('text')%%00010            .attr('id', 'subtitle')%%00010            .attr('class', 'knime-subtitle')%%00010            .attr('x', 20)%%00010            .text(_value.options.subtitle);%%00010        // y attr is set in drawChart%%00010%%00010        if (_representation.options.enableViewControls) {%%00010            drawControls();%%00010        }%%00010        drawChart();%%00010%%00010        if (window.parent.KnimePageLoader) {%%00010            window.parent.KnimePageLoader.autoResize(window.frameElement.id);%%00010        }%%00010    };%%00010%%00010    drawControls = function () {%%00010        if (_representation.options.displayFullscreen) {%%00010            knimeService.allowFullscreen();%%00010        }%%00010%%00010        if (!_representation.options.enableViewControls) {%%00010            return;%%00010        }%%00010%%00010        if (_representation.options.enableTitleEdit || _representation.options.enableSubtitleEdit) {%%00010            if (_representation.options.enableTitleEdit) {%%00010                var chartTitleText = knimeService.createMenuTextField('chartTitleText', _value.options.title,%%00010                    updateTitle, true);%%00010                knimeService.addMenuItem('Chart Title:', 'header', chartTitleText);%%00010            }%%00010%%00010            if (_representation.options.enableSubtitleEdit) {%%00010                var chartSubtitleText = knimeService.createMenuTextField('chartSubtitleText', _value.options.subtitle,%%00010                    updateSubtitle, true);%%00010                knimeService.addMenuItem('Chart Subtitle:', 'header', chartSubtitleText, null, knimeService.SMALL_ICON);%%00010            }%%00010%%00010            if (_representation.options.enableColumnSelection) {%%00010                knimeService.addMenuDivider();%%00010            }%%00010        }%%00010%%00010        if (_representation.options.enableColumnSelection) {%%00010            var colSelect = knimeService.createMenuSelect('columnSelect', _value.options.numCol,%%00010                _representation.options.columns, function () {%%00010                    _value.options.numCol = this.value;%%00010                    drawChart();%%00010                });%%00010            knimeService.addMenuItem('Selected column:', 'minus-square fa-rotate-90', colSelect);%%00010%%00010            if (_representation.options.enableSwitchMissValClass) {%%00010                knimeService.addMenuDivider();%%00010            }%%00010        }%%00010%%00010        if (_representation.options.enableSwitchMissValClass &amp;&amp; _representation.options.reportOnMissingValues) {%%00010            _switchMissValClassCbx = knimeService.createMenuCheckbox('switchMissValClassCbx',%%00010                _value.options.includeMissValClass, function () {%%00010                    if (_value.options.includeMissValClass !== this.checked) {%%00010                        _value.options.includeMissValClass = this.checked;%%00010                        drawChart();%%00010                    }%%00010                });%%00010            knimeService.addMenuItem('Include \'Missing values\' class: ', 'question', _switchMissValClassCbx);%%00010        }%%00010    };%%00010%%00010    updateTitle = function () {%%00010        var hadTitle = _value.options.title.length &gt; 0;%%00010        _value.options.title = document.getElementById('chartTitleText').value;%%00010        var hasTitle = _value.options.title.length &gt; 0;%%00010        if (hasTitle !== hadTitle) {%%00010            // if the title appeared or disappeared, we need to resize the chart%%00010            drawChart(true);%%00010        }%%00010        d3.select('#title').text(_value.options.title);%%00010    };%%00010%%00010    updateSubtitle = function () {%%00010        var hadTitle = _value.options.subtitle.length &gt; 0;%%00010        _value.options.subtitle = document.getElementById('chartSubtitleText').value;%%00010        var hasTitle = _value.options.subtitle.length &gt; 0;%%00010        if (hasTitle !== hadTitle) {%%00010            // if the subtitle appeared or disappeared, we need to resize the chart%%00010            drawChart(true);%%00010        }%%00010        d3.select('#subtitle').text(_value.options.subtitle);%%00010    };%%00010%%00010    // Draws the chart. If resizing is true, there are no animations.%%00010    drawChart = function (resizing) {%%00010%%00010        // Select the data to show%%00010        _data = _representation.inObjects[0].stats[_value.options.numCol];%%00010%%00010        _missValClass = undefined; // eslint-disable-line no-undefined%%00010        if ((!_value.options.includeMissValClass || !_representation.options.reportOnMissingValues) &amp;&amp;%%00010            typeof _data !== 'undefined' &amp;&amp; typeof _data[MISSING_VALUES_CLASS] !== 'undefined') {%%00010            _missValClass = _data[MISSING_VALUES_CLASS];%%00010            delete _data[MISSING_VALUES_CLASS];%%00010        }%%00010%%00010        // Find the maximum y-value for the axis%%00010        maxY = Number.NEGATIVE_INFINITY;%%00010        minY = Number.POSITIVE_INFINITY;%%00010        for (var key in _data) {%%00010            maxY = Math.max(_data[key].max, maxY);%%00010            minY = Math.min(_data[key].min, minY);%%00010        }%%00010%%00010        // Calculate the correct chart width%%00010        var cw = Math.max(MIN_WIDTH, _representation.options.svg.width);%%00010        var ch = Math.max(MIN_HEIGHT, _representation.options.svg.height);%%00010%%00010        var chartWidth = cw + 'px';%%00010        var chartHeight = ch + 'px';%%00010        // If we are fullscreen, we set the chart width to 100%%%00010        if (_representation.options.svg.fullscreen &amp;&amp; _representation.runningInView) {%%00010            chartWidth = '100%';%%00010            chartHeight = '100%';%%00010        }%%00010%%00010        d3.select('#svgContainer')%%00010            .style('height', chartHeight)%%00010            .style('width', chartWidth);%%00010%%00010        // The margins for the plot area%%00010        var topMargin = 10;%%00010        if (_value.options.title &amp;&amp; _value.options.subtitle) {%%00010            topMargin += 50;%%00010        } else if (_value.options.title) {%%00010            topMargin += 36;%%00010        } else if (_value.options.subtitle) {%%00010            topMargin += 26;%%00010        }%%00010%%00010        var margins = {%%00010            top: topMargin,%%00010            bottom: 40,%%00010            right: 10%%00010        };%%00010%%00010        d3.select('#subtitle').attr('y', topMargin - 14);%%00010%%00010        var d3svg = d3.select('svg')%%00010            .attr({ width: cw, height: ch })%%00010            .style({ width: chartWidth, height: chartHeight });%%00010%%00010        // Calculate height of the plot area (without x-axis)%%00010        var h = Math.max(50, parseInt(d3svg.style('height'), 10) - margins.top - margins.bottom);%%00010%%00010        // y-axis scale%%00010        var yScale = d3.scale.linear().domain([minY, maxY]).range([h, 0]).nice();%%00010%%00010        // determine required margin-left%%00010        var yLabels = yScale.ticks(Y_TICK_COUNT).map(yScale.tickFormat(Y_TICK_COUNT)).map(String);%%00010        var maxYLabelWidth = knimeService.measureAndTruncate(yLabels, {%%00010            container: d3svg.node(),%%00010            classes: 'knime-tick-label',%%00010            maxWidth: Y_LABEL_MAX_WIDTH%%00010        }).max.maxWidth;%%00010        margins.left = 15 + maxYLabelWidth;%%00010%%00010        // Calculate width of the plot area (without y-axis)%%00010        var w = Math.max(50, parseInt(d3svg.style('width'), 10) - margins.left - margins.right);%%00010%%00010        // x-axis scale%%00010        var xScale = d3.scale.ordinal().domain(d3.keys(_data).sort(compareCategories)).rangeBands([0, w], 0.75, 0.5);%%00010%%00010        // color scale%%00010        var colorScale = d3.scale.category10();%%00010        if (_value.options.applyColors) {%%00010            if (d3.entries(_data).length &gt; 10) {%%00010                colorScale = d3.scale.category20();%%00010            }%%00010            if (_representation.inObjects[1] &amp;&amp; _representation.inObjects[1].spec.colTypes[0] === 'string') {%%00010                var categories = [];%%00010                var colors = _representation.inObjects[1].spec.rowColorValues;%%00010                for (var i = 0; i &lt; _representation.inObjects[1].rows.length; i++) {%%00010                    categories.push(_representation.inObjects[1].rows[i].data[0]);%%00010                }%%00010                categories.push(null);%%00010                colors.push('#404040');%%00010                colorScale = d3.scale.ordinal().domain(categories).range(colors);%%00010            }%%00010        }%%00010%%00010        // Position the plot group based on the margins%%00010        var plotG = d3svg.select('#plotG')%%00010            .attr('transform', 'translate(' + margins.left + ',' + margins.top + ')');%%00010%%00010        // Resize background rectangles%%00010        plotG.select('#da').attr({%%00010            width: w,%%00010            height: h + 5%%00010        });%%00010        d3svg.select('#bgr').attr({%%00010            width: w + margins.left + margins.right,%%00010            height: h + margins.top + margins.bottom%%00010        });%%00010%%00010        // d3 axes%%00010        var xAxis = d3.svg.axis().scale(xScale)%%00010            .orient('bottom');%%00010        var yAxis = d3.svg.axis().scale(yScale)%%00010            .orient('left').ticks(Y_TICK_COUNT);%%00010%%00010        // Remove axes so they are redrawn%%00010        d3.selectAll('.axis').remove();%%00010%%00010        // Append and style x-axis%%00010        var d3XAxis = plotG.append('g')%%00010            .attr('class', 'x axis knime-x knime-axis')%%00010            .attr('transform', 'translate(0,' + (h + 5) + ')')%%00010            .call(xAxis);%%00010        d3XAxis.selectAll('line,path')%%00010            .attr('fill', 'none')%%00010            .attr('stroke', 'black')%%00010            .attr('shape-rendering', 'crispEdges');%%00010%%00010        // Append and style y-axis%%00010        var d3YAxis = plotG.append('g')%%00010            .attr('class', 'y axis knime-y knime-axis')%%00010            .call(yAxis);%%00010        d3YAxis.selectAll('line,path')%%00010            .attr('fill', 'none')%%00010            .attr('stroke', 'black')%%00010            .attr('shape-rendering', 'crispEdges');%%00010%%00010        plotG.selectAll('.axis-label').remove();%%00010%%00010        plotG.append('text')%%00010            .attr('class', 'y axis-label knime-y knime-axis-label')%%00010            .attr('text-anchor', 'end')%%00010            .attr('y', 6)%%00010            .attr('dy', '.75em')%%00010            .attr('transform', 'rotate(-90)')%%00010            .text(_value.options.numCol);%%00010%%00010        plotG.append('text')%%00010            .attr('class', 'x axis-label knime-x knime-axis-label')%%00010            .attr('text-anchor', 'end')%%00010            .attr('x', w)%%00010            .attr('y', h - 6)%%00010            .text(_representation.inObjects[0].catCol);%%00010%%00010        d3.selectAll('.domain')%%00010            .classed('knime-axis-line', true);%%00010        var ticks = d3.selectAll('.tick')%%00010            .classed('knime-tick', true);%%00010        ticks.selectAll('line')%%00010            .classed('knime-tick-line', true);%%00010        ticks.selectAll('text')%%00010            .classed('knime-tick-label', true);%%00010%%00010        // Animate only when running in view and not resizing%%00010        var duration = (_representation.runningInView &amp;&amp; !resizing) ? 500 : 0;%%00010%%00010        // Create a selection for each box with data that we created at the beginning%%00010        var boxG = plotG.selectAll('g.box')%%00010            .data(d3.entries(_data), function (d) {%%00010                return d.key;%%00010            });%%00010%%00010        // Remove boxes that are not in the data anymore%%00010        boxG.exit().remove();%%00010%%00010        // Append a group element for each new box and shift it according to the class%%00010        var box = boxG.enter().append('g')%%00010            .attr('class', 'box')%%00010            .attr('transform', function (d) { return 'translate(' + xScale(d.key) + ',0)'; });%%00010%%00010        // Transition all boxes to their position%%00010        d3.selectAll('.box').transition().duration(duration)%%00010            .attr('transform', function (d) { return 'translate(' + xScale(d.key) + ',0)'; });%%00010%%00010        // The main rectangle for the box%%00010        box.append('rect')%%00010            .attr('class', 'boxrect')%%00010            .attr('stroke', 'black')%%00010            // .attr(&quot;fill&quot;, _representation.options.boxColor || &quot;none&quot;);%%00010            .attr('fill', function (d) {%%00010                if (_value.options.applyColors) {%%00010                    return colorScale(d.key);%%00010                } else {%%00010                    return _representation.options.boxColor || 'none';%%00010                }%%00010            });%%00010%%00010        // Update the box according to the data%%00010        boxG.selectAll('.boxrect')%%00010            .data(function (d) { return [d]; })%%00010            .transition().duration(duration)%%00010            .attr('y', function (d) { return yScale(d.value.upperQuartile); })%%00010            .attr('height', function (d) { return yScale(d.value.lowerQuartile) - yScale(d.value.upperQuartile); })%%00010            .attr('width', xScale.rangeBand());%%00010%%00010        // The middle of the box on the x-axis%%00010        var middle = xScale.rangeBand() / 2;%%00010%%00010        // Text for the upper quartile%%00010        box.append('text')%%00010            .attr('x', -5)%%00010            .attr('text-anchor', 'end')%%00010            .attr('class', 'uqText knime-label');%%00010        boxG.selectAll('.uqText')%%00010            .data(function (d) { return [d]; })%%00010            .transition().duration(duration)%%00010            .attr('y', function (d) { return yScale(d.value.upperQuartile) + 3; })%%00010            .text(function (d) { return Math.round(d.value.upperQuartile * 100) / 100; });%%00010%%00010        // Text for the lower quartile%%00010        box.append('text')%%00010            .attr('x', -5)%%00010            .attr('text-anchor', 'end')%%00010            .attr('class', 'lqText knime-label');%%00010        boxG.selectAll('.lqText')%%00010            .data(function (d) { return [d]; })%%00010            .transition().duration(duration)%%00010            .attr('y', function (d) { return yScale(d.value.lowerQuartile) + 3; })%%00010            .text(function (d) { return Math.round(d.value.lowerQuartile * 100) / 100; });%%00010%%00010%%00010        // Median%%00010        box.append('line')%%00010            .attr('stroke', 'black')%%00010            .attr('stroke-width', 3)%%00010            .attr('x1', '0')%%00010            .attr('class', 'median');%%00010%%00010        boxG.selectAll('.median')%%00010            .data(function (d) { return [d]; })%%00010            .transition().duration(duration)%%00010            .attr('x2', xScale.rangeBand())%%00010            .attr('y1', function (d) { return yScale(d.value.median); })%%00010            .attr('y2', function (d) { return yScale(d.value.median); });%%00010%%00010        box.append('text')%%00010            .attr('class', 'medianText knime-label');%%00010%%00010        boxG.selectAll('.medianText')%%00010            .data(function (d) { return [d]; })%%00010            .transition().duration(duration)%%00010            .attr('x', xScale.rangeBand() + 5)%%00010            .attr('y', function (d) { return yScale(d.value.median) + 3; })%%00010            .text(function (d) { return Math.round(d.value.median * 100) / 100; });%%00010%%00010        // Upper whisker%%00010        box.append('line')%%00010            .attr('stroke', 'black')%%00010            .attr('class', 'uwL1');%%00010%%00010        boxG.selectAll('.uwL1')%%00010            .data(function (d) { return [d]; })%%00010            .transition().duration(duration)%%00010            .attr('x1', middle)%%00010            .attr('x2', middle)%%00010            .attr('stroke-dasharray', '5,5')%%00010            .attr('y1', function (d) { return yScale(d.value.upperQuartile); })%%00010            .attr('y2', function (d) { return yScale(d.value.upperWhisker); });%%00010%%00010%%00010        box.append('line')%%00010            .attr('stroke', 'black')%%00010            .attr('x1', '0')%%00010            .attr('class', 'uwL2');%%00010%%00010        boxG.selectAll('.uwL2')%%00010            .data(function (d) { return [d]; })%%00010            .transition().duration(duration)%%00010            .attr('x2', xScale.rangeBand())%%00010            .attr('y1', function (d) { return yScale(d.value.upperWhisker); })%%00010            .attr('y2', function (d) { return yScale(d.value.upperWhisker); });%%00010%%00010        box.append('text')%%00010            .attr('class', 'uwText knime-label');%%00010%%00010        boxG.selectAll('.uwText')%%00010            .data(function (d) { return [d]; })%%00010            .transition().duration(duration)%%00010            .attr('x', xScale.rangeBand() + 5)%%00010            .attr('y', function (d) { return yScale(d.value.upperWhisker) + 10; })%%00010            .text(function (d) { return Math.round(d.value.upperWhisker * 100) / 100; });%%00010%%00010        // Lower whisker%%00010        box.append('line')%%00010            .attr('stroke', 'black')%%00010            .attr('class', 'ulL1');%%00010%%00010        boxG.selectAll('.ulL1')%%00010            .data(function (d) { return [d]; })%%00010            .transition().duration(duration)%%00010            .attr('x1', middle)%%00010            .attr('x2', middle)%%00010            .attr('stroke-dasharray', '5,5')%%00010            .attr('y1', function (d) { return yScale(d.value.lowerQuartile); })%%00010            .attr('y2', function (d) { return yScale(d.value.lowerWhisker); });%%00010%%00010        box.append('line')%%00010            .attr('stroke', 'black')%%00010            .attr('x1', '0')%%00010            .attr('class', 'ulL2');%%00010%%00010        boxG.selectAll('.ulL2')%%00010            .data(function (d) { return [d]; })%%00010            .transition().duration(duration)%%00010            .attr('x2', xScale.rangeBand())%%00010            .attr('y1', function (d) { return yScale(d.value.lowerWhisker); })%%00010            .attr('y2', function (d) { return yScale(d.value.lowerWhisker); });%%00010%%00010        box.append('text')%%00010            .attr('class', 'ulText knime-label');%%00010%%00010        boxG.selectAll('.ulText')%%00010            .data(function (d) { return [d]; })%%00010            .transition().duration(duration)%%00010            .attr('x', xScale.rangeBand() + 5)%%00010            .attr('y', function (d) { return yScale(d.value.lowerWhisker) - 3; })%%00010            .text(function (d) { return Math.round(d.value.lowerWhisker * 100) / 100; });%%00010%%00010        // Mild outliers%%00010        var outl = boxG.selectAll('circle.mo')%%00010            .data(function (d) { return d.value.mildOutliers; });%%00010%%00010        outl.enter().append('circle')%%00010            .attr('class', 'mo')%%00010            .attr('r', 5)%%00010            .attr('fill', _representation.options.daColor)%%00010            .attr('stroke', 'black')%%00010            .attr('cx', middle)%%00010            .attr('cy', function (d) { return yScale(d.value); })%%00010            .append('title')%%00010            .attr('class', 'knime-label')%%00010            .text(function (d) { return d.rowKey; });%%00010%%00010        outl.transition().duration(duration)%%00010            .attr('cx', middle)%%00010            .attr('cy', function (d) { return yScale(d.value); });%%00010%%00010        outl.exit().transition().style('opacity', 0).each('end', function () { d3.select(this).remove(); });%%00010%%00010        // Extreme outliers%%00010        var exoutl = boxG.selectAll('g.eo')%%00010            .data(function (d) { return d.value.extremeOutliers; });%%00010%%00010        var enterG = exoutl.enter().append('g')%%00010            .attr('class', 'eo')%%00010            .attr('transform', function (d) { return 'translate(' + middle + ',' + yScale(d.value) + ')'; });%%00010%%00010        var crossSize = 4;%%00010%%00010        enterG.append('line')%%00010            .attr({%%00010                x1: -crossSize,%%00010                y1: -crossSize,%%00010                x2: crossSize,%%00010                y2: crossSize,%%00010                'stroke-width': 1.5,%%00010                'stroke-linecap': 'round'%%00010            })%%00010            .append('title')%%00010            .attr('class', 'knime-label')%%00010            .text(function (d) { return d.rowKey; });%%00010%%00010        enterG.append('line')%%00010            .attr({%%00010                x1: -crossSize,%%00010                y1: crossSize,%%00010                x2: crossSize,%%00010                y2: -crossSize,%%00010                'stroke-width': 1.5,%%00010                'stroke-linecap': 'round'%%00010            })%%00010            .append('title')%%00010            .attr('class', 'knime-label')%%00010            .text(function (d) { return d.rowKey; });%%00010%%00010        exoutl.transition().duration(duration)%%00010            .attr('transform', function (d) { return 'translate(' + middle + ',' + yScale(d.value) + ')'; });%%00010%%00010        // Fade out outliers%%00010        exoutl.exit().transition().style('opacity', 0).each('end', function () { d3.select(this).remove(); });%%00010%%00010        processMissingValues();%%00010%%00010        if ((!_value.options.includeMissValClass || !_representation.options.reportOnMissingValues) &amp;&amp;%%00010            typeof _missValClass !== 'undefined') {%%00010            _data[MISSING_VALUES_CLASS] = _missValClass;%%00010        }%%00010%%00010        // Set resize handler%%00010        if (_representation.options.svg.fullscreen) {%%00010            var win = document.defaultView || document.parentWindow;%%00010            win.onresize = resize;%%00010        }%%00010    };%%00010%%00010    // Use custom compare function to ensure that the missing values category is the last one%%00010    compareCategories = function (a, b) {%%00010        if (a = 'Missing values') {%%00010            return 1;%%00010        }%%00010        if (a &lt; b) {%%00010            return -1;%%00010        }%%00010        if (a &gt; b) {%%00010            return 1;%%00010        }%%00010        return 0;%%00010    };%%00010%%00010    resize = function (event) {%%00010        drawChart(true);%%00010    };%%00010%%00010    processMissingValues = function () {%%00010        if (!_representation.options.showWarnings) {%%00010            return;%%00010        }%%00010%%00010        knimeService.clearWarningMessage(NO_DATA_AVAILABLE);%%00010        knimeService.clearWarningMessage(MISSING_VALUES_ONLY);%%00010        knimeService.clearWarningMessage(IGNORED_MISSING_VALUES);%%00010        knimeService.clearWarningMessage(NO_DATA_COLUMN);%%00010%%00010        // temporary workaround for being able to select a data column which was not included in the node settings%%00010        if (typeof _data === 'undefined') {%%00010            knimeService.setWarningMessage('No chart was generated since the selected column was not included in the ' +%%00010                'node configuration dialog. Please choose another column or add the selected column to the list of ' +%%00010                'included columns.', NO_DATA_COLUMN);%%00010            return;%%00010        }%%00010%%00010        var excludedClasses = _representation.inObjects[0].excludedClasses[_value.options.numCol];%%00010        var ignoredMissVals = _representation.inObjects[0].ignoredMissVals[_value.options.numCol];%%00010%%00010        if (typeof _switchMissValClassCbx !== 'undefined') {%%00010            if (typeof _missValClass === 'undefined' &amp;&amp; typeof _data[MISSING_VALUES_CLASS] === 'undefined' &amp;&amp;%%00010                excludedClasses.indexOf(MISSING_VALUES_CLASS) === -1 &amp;&amp;%%00010                typeof ignoredMissVals[MISSING_VALUES_CLASS] === 'undefined') {%%00010                // there's no missing values in class column - disable the control%%00010                _switchMissValClassCbx.disabled = true;%%00010                _switchMissValClassCbx.checked = false;%%00010            } else {%%00010                // restore the state%%00010                _switchMissValClassCbx.disabled = false;%%00010                _switchMissValClassCbx.checked = _value.options.includeMissValClass;%%00010            }%%00010        }%%00010%%00010        var missValClass, ignoredMVal;%%00010        // if option &quot;Include 'Missing values'&quot; is off, we don't show a warning about them%%00010        if (!_value.options.includeMissValClass || !_representation.options.reportOnMissingValues) {%%00010            excludedClasses = excludedClasses.filter(function (x) {%%00010                return x !== MISSING_VALUES_CLASS;%%00010            });%%00010%%00010            if ((!_value.options.includeMissValClass || !_representation.options.reportOnMissingValues) &amp;&amp;%%00010                typeof ignoredMissVals[MISSING_VALUES_CLASS] !== 'undefined') {%%00010                missValClass = ignoredMissVals[MISSING_VALUES_CLASS];%%00010                delete ignoredMissVals[MISSING_VALUES_CLASS];%%00010            }%%00010        }%%00010%%00010        if (Object.keys(_data).length === 0) {%%00010            if (typeof _missValClass !== 'undefined' &amp;&amp; _representation.options.reportOnMissingValues) {%%00010                knimeService.setWarningMessage('No chart was generated since all classes have only missing values or ' +%%00010                    'special doubles.\nThere are values where the class name is missing.\n' +%%00010                    'To see them switch on the option &quot;Include \'Missing values\' class&quot; in the view settings.',%%00010                    NO_DATA_AVAILABLE);%%00010            } else {%%00010                knimeService.setWarningMessage('No chart was generated since all classes have only missing values or ' +%%00010                    'special doubles.\nChoose another data column or re-run the workflow with different data.',%%00010                    NO_DATA_AVAILABLE);%%00010            }%%00010        } else if (_representation.options.reportOnMissingValues) {%%00010            if (excludedClasses.length &gt; 0) {%%00010                knimeService.setWarningMessage('Following classes contain only missing values or special doubles and ' +%%00010                    'were excluded from the view:\n    ' + excludedClasses.join('\n    '), MISSING_VALUES_ONLY);%%00010            }%%00010            if (Object.keys(ignoredMissVals).length &gt; 0) {%%00010                var str = '';%%00010                for (ignoredMVal in ignoredMissVals) {%%00010                    // if option &quot;Include 'Missing values'&quot; is off, we don't show a warning about them%%00010                    if (ignoredMissVals.hasOwnProperty(ignoredMVal) &amp;&amp;%%00010                        (_value.options.includeMissValClass || ignoredMVal !== MISSING_VALUES_CLASS)) {%%00010                        str += '    ' + ignoredMVal + ' - ' + ignoredMissVals[ignoredMVal] +%%00010                            ' missing value(s) or special double(s)\n';%%00010                    }%%00010                }%%00010                knimeService.setWarningMessage('Missing values or special doubles ignored during statistics ' +%%00010                    'calculations per class:\n' + str, IGNORED_MISSING_VALUES);%%00010            }%%00010        }%%00010%%00010        if ((!_value.options.includeMissValClass || !_representation.options.reportOnMissingValues) &amp;&amp;%%00010            typeof missValClass !== 'undefined') {%%00010            ignoredMissVals[MISSING_VALUES_CLASS] = missValClass;%%00010        }%%00010    };%%00010%%00010    boxplot.getSVG = function () {%%00010        var svgElement = d3.select('svg')[0][0];%%00010        knimeService.inlineSvgStyles(svgElement);%%00010        // Return the SVG as a string.%%00010        return (new XMLSerializer()).serializeToString(svgElement);%%00010    };%%00010%%00010    boxplot.validate = function () {%%00010        return true;%%00010    };%%00010%%00010    boxplot.getComponentValue = function () {%%00010        return _value;%%00010    };%%00010%%00010    return boxplot;%%00010%%00010})();%%00010"/>
    </config>
    <config key="cssCode">
        <entry key="array-size" type="xint" value="1"/>
        <entry key="0" type="xstring" value=".axis path,%%00010line {%%00010  fill: none;%%00010  stroke: #000;%%00010  shape-rendering: crispEdges;%%00010}"/>
    </config>
    <config key="jsDependencies">
        <entry key="numSettings" type="xint" value="2"/>
        <config key="dependency_0">
            <entry key="name" type="xstring" value="D3"/>
            <entry key="path" type="xstring" value="js-lib/d3/d3.v3_2_8.min.js"/>
            <entry key="usesDefine" type="xboolean" value="false"/>
            <entry key="exports" type="xstring" isnull="true" value=""/>
            <config key="dependencies">
                <entry key="array-size" type="xint" value="0"/>
            </config>
            <entry key="local" type="xboolean" value="true"/>
        </config>
        <config key="dependency_1">
            <entry key="name" type="xstring" value="jQuery"/>
            <entry key="path" type="xstring" value="js-lib/jQuery/jquery-1.11.0.min.js"/>
            <entry key="usesDefine" type="xboolean" value="false"/>
            <entry key="exports" type="xstring" isnull="true" value=""/>
            <config key="dependencies">
                <entry key="array-size" type="xint" value="0"/>
            </config>
            <entry key="local" type="xboolean" value="true"/>
        </config>
    </config>
    <config key="cssDependencies">
        <entry key="array-size" type="xint" value="0"/>
    </config>
    <entry key="new" type="xboolean" value="false"/>
    <entry key="inView" type="xboolean" value="true"/>
    <config key="tableIds">
        <entry key="array-size" type="xint" value="2"/>
        <entry key="0" type="xstring" value="9d6c67a0-d043-48e9-a459-aeb97617c00a"/>
        <entry key="1" type="xstring" isnull="true" value=""/>
    </config>
    <config key="variables">
        <entry key="numSettings" type="xint" value="1"/>
        <entry key="mapClass" type="xstring" value="string"/>
        <entry key="key_0" type="xstring" value="knime.workspace"/>
        <entry key="class_0" type="xstring" value="java.lang.String"/>
        <entry key="value_0" type="xstring" value="C:\Users\annaj\CSE587\KNIME_WORKSPACE"/>
    </config>
    <config key="binaryFiles">
        <entry key="numSettings" type="xint" value="0"/>
        <entry key="mapClass" type="xstring" value="string"/>
    </config>
    <config key="options">
        <entry key="numSettings" type="xint" value="14"/>
        <entry key="mapClass" type="xstring" value="object"/>
        <entry key="key_0" type="xstring" value="backgroundColor"/>
        <entry key="class_0" type="xstring" value="java.lang.String"/>
        <entry key="value_0" type="xstring" value="#FFFFFF"/>
        <entry key="key_1" type="xstring" value="svg"/>
        <entry key="class_1" type="xstring" value="org.knime.dynamic.js.SettingsModelSVGOptions$JSONSVGOptions"/>
        <config key="value_1">
            <entry key="width" type="xint" value="800"/>
            <entry key="height" type="xint" value="600"/>
            <entry key="fullscreen" type="xboolean" value="true"/>
        </config>
        <entry key="key_2" type="xstring" value="enableSwitchMissValClass"/>
        <entry key="class_2" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_2" type="xboolean" value="true"/>
        <entry key="key_3" type="xstring" value="columns"/>
        <entry key="class_3" type="xstring" value="[Ljava.lang.String;"/>
        <config key="value_3">
            <entry key="array-size" type="xint" value="11"/>
            <entry key="0" type="xstring" value="number"/>
            <entry key="1" type="xstring" value="air_pressure_9am"/>
            <entry key="2" type="xstring" value="air_temp_9am"/>
            <entry key="3" type="xstring" value="avg_wind_direction_9am"/>
            <entry key="4" type="xstring" value="avg_wind_speed_9am"/>
            <entry key="5" type="xstring" value="max_wind_direction_9am"/>
            <entry key="6" type="xstring" value="max_wind_speed_9am"/>
            <entry key="7" type="xstring" value="rain_accumulation_9am"/>
            <entry key="8" type="xstring" value="rain_duration_9am"/>
            <entry key="9" type="xstring" value="relative_humidity_9am"/>
            <entry key="10" type="xstring" value="relative_humidity_3pm"/>
        </config>
        <entry key="key_4" type="xstring" value="boxColor"/>
        <entry key="class_4" type="xstring" value="java.lang.String"/>
        <entry key="value_4" type="xstring" value="#FFFFFF"/>
        <entry key="key_5" type="xstring" value="enableTitleEdit"/>
        <entry key="class_5" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_5" type="xboolean" value="true"/>
        <entry key="key_6" type="xstring" value="displayFullscreen"/>
        <entry key="class_6" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_6" type="xboolean" value="true"/>
        <entry key="key_7" type="xstring" value="reportOnMissingValues"/>
        <entry key="class_7" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_7" type="xboolean" value="true"/>
        <entry key="key_8" type="xstring" value="catCol"/>
        <entry key="class_8" type="xstring" value="java.lang.String"/>
        <entry key="value_8" type="xstring" value="Day_Humidity"/>
        <entry key="key_9" type="xstring" value="enableViewControls"/>
        <entry key="class_9" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_9" type="xboolean" value="true"/>
        <entry key="key_10" type="xstring" value="enableColumnSelection"/>
        <entry key="class_10" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_10" type="xboolean" value="true"/>
        <entry key="key_11" type="xstring" value="showWarnings"/>
        <entry key="class_11" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_11" type="xboolean" value="true"/>
        <entry key="key_12" type="xstring" value="enableSubtitleEdit"/>
        <entry key="class_12" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_12" type="xboolean" value="true"/>
        <entry key="key_13" type="xstring" value="daColor"/>
        <entry key="class_13" type="xstring" value="java.lang.String"/>
        <entry key="value_13" type="xstring" value="#FFFFFF"/>
    </config>
    <config key="inObjects">
        <entry key="numSettings" type="xint" value="2"/>
        <config key="inObject_0">
            <entry key="className" type="xstring" value="org.knime.dynamic.js.base.boxplot.ConditionalBoxplotProcessor_v2$CondBoxPlotResult"/>
            <entry key="jsonValue" type="xstring" value="{&quot;stats&quot;:{&quot;number&quot;:{&quot;Low&quot;:{&quot;min&quot;:1.0,&quot;mildOutliers&quot;:[],&quot;extremeOutliers&quot;:[],&quot;max&quot;:1094.0,&quot;median&quot;:556.0,&quot;lowerWhisker&quot;:1.0,&quot;upperQuartile&quot;:831.5,&quot;lowerQuartile&quot;:283.0,&quot;upperWhisker&quot;:1094.0},&quot;Not_low&quot;:{&quot;min&quot;:0.0,&quot;mildOutliers&quot;:[],&quot;extremeOutliers&quot;:[],&quot;max&quot;:1093.0,&quot;median&quot;:532.0,&quot;lowerWhisker&quot;:0.0,&quot;upperQuartile&quot;:813.0,&quot;lowerQuartile&quot;:261.0,&quot;upperWhisker&quot;:1093.0}},&quot;air_pressure_9am&quot;:{&quot;Low&quot;:{&quot;min&quot;:911.0000000000076,&quot;mildOutliers&quot;:[{&quot;value&quot;:927.6100000000024,&quot;rowKey&quot;:&quot;Row95&quot;},{&quot;value&quot;:911.0000000000076,&quot;rowKey&quot;:&quot;Row14&quot;},{&quot;value&quot;:913.3200000000039,&quot;rowKey&quot;:&quot;Row386&quot;},{&quot;value&quot;:913.6332676770421,&quot;rowKey&quot;:&quot;Row286&quot;}],&quot;extremeOutliers&quot;:[],&quot;max&quot;:927.6100000000024,&quot;median&quot;:920.6361771910115,&quot;lowerWhisker&quot;:913.9300000000079,&quot;upperQuartile&quot;:922.1819231746197,&quot;lowerQuartile&quot;:918.8200000000065,&quot;upperWhisker&quot;:926.7700000000093},&quot;Not_low&quot;:{&quot;min&quot;:907.9900000000024,&quot;mildOutliers&quot;:[{&quot;value&quot;:907.9900000000024,&quot;rowKey&quot;:&quot;Row204&quot;},{&quot;value&quot;:909.1900000000032,&quot;rowKey&quot;:&quot;Row708&quot;},{&quot;value&quot;:929.3200000000012,&quot;rowKey&quot;:&quot;Row281&quot;},{&quot;value&quot;:908.4200000000076,&quot;rowKey&quot;:&quot;Row342&quot;},{&quot;value&quot;:909.8600000000093,&quot;rowKey&quot;:&quot;Row565&quot;},{&quot;value&quot;:925.7400000000059,&quot;rowKey&quot;:&quot;Row82&quot;},{&quot;value&quot;:925.3100000000012,&quot;rowKey&quot;:&quot;Row1029&quot;},{&quot;value&quot;:908.9700000000045,&quot;rowKey&quot;:&quot;Row474&quot;},{&quot;value&quot;:924.4600000000046,&quot;rowKey&quot;:&quot;Row751&quot;}],&quot;extremeOutliers&quot;:[],&quot;max&quot;:929.3200000000012,&quot;median&quot;:917.2000000000077,&quot;lowerWhisker&quot;:910.3400000000078,&quot;upperQuartile&quot;:919.1000000000076,&quot;lowerQuartile&quot;:915.5600000000079,&quot;upperWhisker&quot;:924.2900000000047}},&quot;air_temp_9am&quot;:{&quot;Low&quot;:{&quot;min&quot;:38.13800000000076,&quot;mildOutliers&quot;:[{&quot;value&quot;:42.620000000000175,&quot;rowKey&quot;:&quot;Row192&quot;},{&quot;value&quot;:43.16000000000035,&quot;rowKey&quot;:&quot;Row97&quot;},{&quot;value&quot;:42.70311604796972,&quot;rowKey&quot;:&quot;Row797&quot;},{&quot;value&quot;:38.13800000000076,&quot;rowKey&quot;:&quot;Row77&quot;}],&quot;extremeOutliers&quot;:[],&quot;max&quot;:89.40200000000375,&quot;median&quot;:68.42623640916277,&quot;lowerWhisker&quot;:43.86200000000369,&quot;upperQuartile&quot;:74.2023107913607,&quot;lowerQuartile&quot;:61.80800000000234,&quot;upperWhisker&quot;:89.40200000000375},&quot;Not_low&quot;:{&quot;min&quot;:36.752000000000685,&quot;mildOutliers&quot;:[],&quot;extremeOutliers&quot;:[],&quot;max&quot;:98.90599999999992,&quot;median&quot;:62.1140000000021,&quot;lowerWhisker&quot;:36.752000000000685,&quot;upperQuartile&quot;:72.32000000000046,&quot;lowerQuartile&quot;:51.17000000000011,&quot;upperWhisker&quot;:98.90599999999992}},&quot;avg_wind_direction_9am&quot;:{&quot;Low&quot;:{&quot;min&quot;:29.7,&quot;mildOutliers&quot;:[],&quot;extremeOutliers&quot;:[],&quot;max&quot;:328.30000000000007,&quot;median&quot;:91.45981906678097,&quot;lowerWhisker&quot;:29.7,&quot;upperQuartile&quot;:181.5337377020997,&quot;lowerQuartile&quot;:53.54835010789947,&quot;upperWhisker&quot;:328.30000000000007},&quot;Not_low&quot;:{&quot;min&quot;:15.500000000000046,&quot;mildOutliers&quot;:[{&quot;value&quot;:54.4,&quot;rowKey&quot;:&quot;Row484&quot;},{&quot;value&quot;:305.9,&quot;rowKey&quot;:&quot;Row408&quot;},{&quot;value&quot;:51.5,&quot;rowKey&quot;:&quot;Row506&quot;},{&quot;value&quot;:63.90000000000005,&quot;rowKey&quot;:&quot;Row250&quot;},{&quot;value&quot;:66.20000000000005,&quot;rowKey&quot;:&quot;Row372&quot;},{&quot;value&quot;:50.200000000000045,&quot;rowKey&quot;:&quot;Row700&quot;},{&quot;value&quot;:275.70000000000005,&quot;rowKey&quot;:&quot;Row739&quot;},{&quot;value&quot;:69.1,&quot;rowKey&quot;:&quot;Row815&quot;},{&quot;value&quot;:62.2,&quot;rowKey&quot;:&quot;Row455&quot;},{&quot;value&quot;:70.6,&quot;rowKey&quot;:&quot;Row10&quot;},{&quot;value&quot;:55.0,&quot;rowKey&quot;:&quot;Row783&quot;},{&quot;value&quot;:36.1,&quot;rowKey&quot;:&quot;Row382&quot;},{&quot;value&quot;:46.000000000000036,&quot;rowKey&quot;:&quot;Row99&quot;},{&quot;value&quot;:48.9,&quot;rowKey&quot;:&quot;Row468&quot;},{&quot;value&quot;:59.90000000000005,&quot;rowKey&quot;:&quot;Row864&quot;},{&quot;value&quot;:35.3,&quot;rowKey&quot;:&quot;Row687&quot;},{&quot;value&quot;:73.70000000000005,&quot;rowKey&quot;:&quot;Row85&quot;},{&quot;value&quot;:42.80000000000005,&quot;rowKey&quot;:&quot;Row780&quot;},{&quot;value&quot;:68.6,&quot;rowKey&quot;:&quot;Row892&quot;},{&quot;value&quot;:52.0,&quot;rowKey&quot;:&quot;Row343&quot;},{&quot;value&quot;:44.80000000000005,&quot;rowKey&quot;:&quot;Row867&quot;},{&quot;value&quot;:285.7,&quot;rowKey&quot;:&quot;Row697&quot;},{&quot;value&quot;:319.9,&quot;rowKey&quot;:&quot;Row604&quot;},{&quot;value&quot;:68.90000000000005,&quot;rowKey&quot;:&quot;Row369&quot;},{&quot;value&quot;:74.5,&quot;rowKey&quot;:&quot;Row558&quot;},{&quot;value&quot;:302.1,&quot;rowKey&quot;:&quot;Row578&quot;},{&quot;value&quot;:55.1,&quot;rowKey&quot;:&quot;Row358&quot;},{&quot;value&quot;:32.60000000000005,&quot;rowKey&quot;:&quot;Row123&quot;},{&quot;value&quot;:36.3,&quot;rowKey&quot;:&quot;Row441&quot;},{&quot;value&quot;:52.200000000000045,&quot;rowKey&quot;:&quot;Row94&quot;},{&quot;value&quot;:271.1,&quot;rowKey&quot;:&quot;Row0&quot;},{&quot;value&quot;:50.40000000000005,&quot;rowKey&quot;:&quot;Row804&quot;},{&quot;value&quot;:268.00000000000006,&quot;rowKey&quot;:&quot;Row171&quot;},{&quot;value&quot;:21.70000000000005,&quot;rowKey&quot;:&quot;Row427&quot;},{&quot;value&quot;:49.8,&quot;rowKey&quot;:&quot;Row451&quot;},{&quot;value&quot;:41.30000000000005,&quot;rowKey&quot;:&quot;Row414&quot;},{&quot;value&quot;:67.60000000000005,&quot;rowKey&quot;:&quot;Row778&quot;},{&quot;value&quot;:65.1,&quot;rowKey&quot;:&quot;Row605&quot;},{&quot;value&quot;:52.0,&quot;rowKey&quot;:&quot;Row1022&quot;},{&quot;value&quot;:280.90000000000003,&quot;rowKey&quot;:&quot;Row194&quot;},{&quot;value&quot;:333.00000000000006,&quot;rowKey&quot;:&quot;Row265&quot;},{&quot;value&quot;:28.90000000000005,&quot;rowKey&quot;:&quot;Row410&quot;},{&quot;value&quot;:277.80000000000007,&quot;rowKey&quot;:&quot;Row268&quot;},{&quot;value&quot;:72.70000000000005,&quot;rowKey&quot;:&quot;Row829&quot;},{&quot;value&quot;:24.8,&quot;rowKey&quot;:&quot;Row135&quot;},{&quot;value&quot;:17.4,&quot;rowKey&quot;:&quot;Row1057&quot;},{&quot;value&quot;:37.8,&quot;rowKey&quot;:&quot;Row155&quot;},{&quot;value&quot;:68.0,&quot;rowKey&quot;:&quot;Row812&quot;},{&quot;value&quot;:292.80000000000007,&quot;rowKey&quot;:&quot;Row880&quot;},{&quot;value&quot;:53.0,&quot;rowKey&quot;:&quot;Row261&quot;},{&quot;value&quot;:18.4,&quot;rowKey&quot;:&quot;Row873&quot;},{&quot;value&quot;:48.4,&quot;rowKey&quot;:&quot;Row1042&quot;},{&quot;value&quot;:277.8,&quot;rowKey&quot;:&quot;Row4&quot;},{&quot;value&quot;:48.1,&quot;rowKey&quot;:&quot;Row756&quot;},{&quot;value&quot;:286.30000000000007,&quot;rowKey&quot;:&quot;Row1003&quot;},{&quot;value&quot;:43.10000000000005,&quot;rowKey&quot;:&quot;Row954&quot;},{&quot;value&quot;:46.80000000000005,&quot;rowKey&quot;:&quot;Row792&quot;},{&quot;value&quot;:303.7,&quot;rowKey&quot;:&quot;Row932&quot;},{&quot;value&quot;:48.6,&quot;rowKey&quot;:&quot;Row585&quot;},{&quot;value&quot;:40.5,&quot;rowKey&quot;:&quot;Row995&quot;},{&quot;value&quot;:30.0,&quot;rowKey&quot;:&quot;Row1073&quot;},{&quot;value&quot;:62.30000000000005,&quot;rowKey&quot;:&quot;Row715&quot;},{&quot;value&quot;:38.0,&quot;rowKey&quot;:&quot;Row356&quot;},{&quot;value&quot;:55.200000000000045,&quot;rowKey&quot;:&quot;Row765&quot;},{&quot;value&quot;:308.1,&quot;rowKey&quot;:&quot;Row798&quot;},{&quot;value&quot;:46.9,&quot;rowKey&quot;:&quot;Row1083&quot;},{&quot;value&quot;:51.7,&quot;rowKey&quot;:&quot;Row1011&quot;},{&quot;value&quot;:29.90000000000005,&quot;rowKey&quot;:&quot;Row768&quot;},{&quot;value&quot;:331.8,&quot;rowKey&quot;:&quot;Row662&quot;},{&quot;value&quot;:274.20000000000005,&quot;rowKey&quot;:&quot;Row502&quot;},{&quot;value&quot;:53.1,&quot;rowKey&quot;:&quot;Row388&quot;},{&quot;value&quot;:60.000000000000036,&quot;rowKey&quot;:&quot;Row944&quot;},{&quot;value&quot;:60.90000000000005,&quot;rowKey&quot;:&quot;Row844&quot;},{&quot;value&quot;:61.40000000000005,&quot;rowKey&quot;:&quot;Row663&quot;},{&quot;value&quot;:42.5,&quot;rowKey&quot;:&quot;Row832&quot;},{&quot;value&quot;:35.1,&quot;rowKey&quot;:&quot;Row300&quot;},{&quot;value&quot;:52.8,&quot;rowKey&quot;:&quot;Row152&quot;},{&quot;value&quot;:294.2000000000001,&quot;rowKey&quot;:&quot;Row512&quot;},{&quot;value&quot;:69.80000000000004,&quot;rowKey&quot;:&quot;Row623&quot;},{&quot;value&quot;:307.4000000000001,&quot;rowKey&quot;:&quot;Row515&quot;},{&quot;value&quot;:311.4000000000001,&quot;rowKey&quot;:&quot;Row636&quot;},{&quot;value&quot;:46.700000000000045,&quot;rowKey&quot;:&quot;Row206&quot;},{&quot;value&quot;:15.500000000000046,&quot;rowKey&quot;:&quot;Row461&quot;}],&quot;extremeOutliers&quot;:[{&quot;value&quot;:343.4,&quot;rowKey&quot;:&quot;Row231&quot;}],&quot;max&quot;:343.4,&quot;median&quot;:178.80000000000004,&quot;lowerWhisker&quot;:77.60000000000005,&quot;upperQuartile&quot;:195.80000000000004,&quot;lowerQuartile&quot;:147.7,&quot;upperWhisker&quot;:264.7}},&quot;avg_wind_speed_9am&quot;:{&quot;Low&quot;:{&quot;min&quot;:0.7829289999999393,&quot;mildOutliers&quot;:[{&quot;value&quot;:21.0496053999995,&quot;rowKey&quot;:&quot;Row912&quot;},{&quot;value&quot;:20.89301960000002,&quot;rowKey&quot;:&quot;Row249&quot;},{&quot;value&quot;:20.724381090801486,&quot;rowKey&quot;:&quot;Row401&quot;},{&quot;value&quot;:21.51936279999981,&quot;rowKey&quot;:&quot;Row941&quot;},{&quot;value&quot;:21.108389797722015,&quot;rowKey&quot;:&quot;Row577&quot;},{&quot;value&quot;:21.340407599999516,&quot;rowKey&quot;:&quot;Row653&quot;},{&quot;value&quot;:21.314179400733046,&quot;rowKey&quot;:&quot;Row540&quot;},{&quot;value&quot;:22.091732871496745,&quot;rowKey&quot;:&quot;Row496&quot;},{&quot;value&quot;:21.520177086778922,&quot;rowKey&quot;:&quot;Row361&quot;},{&quot;value&quot;:21.418196868779305,&quot;rowKey&quot;:&quot;Row926&quot;},{&quot;value&quot;:21.54173219999975,&quot;rowKey&quot;:&quot;Row671&quot;},{&quot;value&quot;:21.180644067530178,&quot;rowKey&quot;:&quot;Row308&quot;},{&quot;value&quot;:23.554978199999763,&quot;rowKey&quot;:&quot;Row97&quot;}],&quot;extremeOutliers&quot;:[],&quot;max&quot;:23.554978199999763,&quot;median&quot;:4.205447199999771,&quot;lowerWhisker&quot;:0.7829289999999393,&quot;upperQuartile&quot;:9.645695007310884,&quot;lowerQuartile&quot;:2.514086906186936,&quot;upperWhisker&quot;:19.50611680000003},&quot;Not_low&quot;:{&quot;min&quot;:0.69345139999974,&quot;mildOutliers&quot;:[{&quot;value&quot;:12.571602799999763,&quot;rowKey&quot;:&quot;Row922&quot;},{&quot;value&quot;:12.929513199999644,&quot;rowKey&quot;:&quot;Row532&quot;},{&quot;value&quot;:12.817666199999904,&quot;rowKey&quot;:&quot;Row1027&quot;},{&quot;value&quot;:16.217814999999742,&quot;rowKey&quot;:&quot;Row342&quot;},{&quot;value&quot;:12.2136923999995,&quot;rowKey&quot;:&quot;Row132&quot;},{&quot;value&quot;:15.658579999999798,&quot;rowKey&quot;:&quot;Row736&quot;},{&quot;value&quot;:12.415017000000056,&quot;rowKey&quot;:&quot;Row660&quot;},{&quot;value&quot;:14.428263000000012,&quot;rowKey&quot;:&quot;Row1009&quot;},{&quot;value&quot;:12.929513199999572,&quot;rowKey&quot;:&quot;Row546&quot;},{&quot;value&quot;:11.967628999999905,&quot;rowKey&quot;:&quot;Row764&quot;},{&quot;value&quot;:16.12833739999977,&quot;rowKey&quot;:&quot;Row224&quot;},{&quot;value&quot;:11.654457399999432,&quot;rowKey&quot;:&quot;Row250&quot;},{&quot;value&quot;:11.58734919999963,&quot;rowKey&quot;:&quot;Row848&quot;},{&quot;value&quot;:12.392647599999659,&quot;rowKey&quot;:&quot;Row856&quot;},{&quot;value&quot;:13.444009399999716,&quot;rowKey&quot;:&quot;Row75&quot;},{&quot;value&quot;:15.457255399999761,&quot;rowKey&quot;:&quot;Row656&quot;},{&quot;value&quot;:15.61384119999974,&quot;rowKey&quot;:&quot;Row111&quot;},{&quot;value&quot;:16.48624779999996,&quot;rowKey&quot;:&quot;Row61&quot;},{&quot;value&quot;:12.258431199999999,&quot;rowKey&quot;:&quot;Row204&quot;},{&quot;value&quot;:12.092454403066142,&quot;rowKey&quot;:&quot;Row670&quot;},{&quot;value&quot;:16.240184399999706,&quot;rowKey&quot;:&quot;Row169&quot;}],&quot;extremeOutliers&quot;:[{&quot;value&quot;:21.25092999999955,&quot;rowKey&quot;:&quot;Row336&quot;},{&quot;value&quot;:18.723187799999682,&quot;rowKey&quot;:&quot;Row565&quot;},{&quot;value&quot;:17.76130359999967,&quot;rowKey&quot;:&quot;Row682&quot;}],&quot;max&quot;:21.25092999999955,&quot;median&quot;:3.5119957999996343,&quot;lowerWhisker&quot;:0.69345139999974,&quot;upperQuartile&quot;:5.905521599999729,&quot;lowerQuartile&quot;:2.125092999999786,&quot;upperWhisker&quot;:11.497871599999748}},&quot;max_wind_direction_9am&quot;:{&quot;Low&quot;:{&quot;min&quot;:38.29999999999986,&quot;mildOutliers&quot;:[],&quot;extremeOutliers&quot;:[],&quot;max&quot;:267.3999999999999,&quot;median&quot;:91.19295013084331,&quot;lowerWhisker&quot;:38.29999999999986,&quot;upperQuartile&quot;:190.2798355196553,&quot;lowerQuartile&quot;:67.86994006989408,&quot;upperWhisker&quot;:267.3999999999999},&quot;Not_low&quot;:{&quot;min&quot;:28.89999999999991,&quot;mildOutliers&quot;:[{&quot;value&quot;:63.899999999999906,&quot;rowKey&quot;:&quot;Row155&quot;},{&quot;value&quot;:54.299999999999905,&quot;rowKey&quot;:&quot;Row867&quot;},{&quot;value&quot;:63.799999999999905,&quot;rowKey&quot;:&quot;Row271&quot;},{&quot;value&quot;:40.099999999999866,&quot;rowKey&quot;:&quot;Row1073&quot;},{&quot;value&quot;:55.399999999999906,&quot;rowKey&quot;:&quot;Row813&quot;},{&quot;value&quot;:62.99999999999991,&quot;rowKey&quot;:&quot;Row780&quot;},{&quot;value&quot;:312.19999999999993,&quot;rowKey&quot;:&quot;Row1003&quot;},{&quot;value&quot;:55.799999999999905,&quot;rowKey&quot;:&quot;Row414&quot;},{&quot;value&quot;:60.0999999999999,&quot;rowKey&quot;:&quot;Row356&quot;},{&quot;value&quot;:295.39999999999986,&quot;rowKey&quot;:&quot;Row0&quot;},{&quot;value&quot;:61.99999999999991,&quot;rowKey&quot;:&quot;Row804&quot;},{&quot;value&quot;:29.499999999999908,&quot;rowKey&quot;:&quot;Row708&quot;},{&quot;value&quot;:53.399999999999906,&quot;rowKey&quot;:&quot;Row720&quot;},{&quot;value&quot;:45.299999999999905,&quot;rowKey&quot;:&quot;Row461&quot;},{&quot;value&quot;:60.6999999999999,&quot;rowKey&quot;:&quot;Row768&quot;},{&quot;value&quot;:28.89999999999991,&quot;rowKey&quot;:&quot;Row1042&quot;},{&quot;value&quot;:31.799999999999862,&quot;rowKey&quot;:&quot;Row832&quot;},{&quot;value&quot;:61.699999999999854,&quot;rowKey&quot;:&quot;Row1083&quot;},{&quot;value&quot;:37.399999999999906,&quot;rowKey&quot;:&quot;Row94&quot;},{&quot;value&quot;:51.299999999999905,&quot;rowKey&quot;:&quot;Row123&quot;},{&quot;value&quot;:59.6999999999999,&quot;rowKey&quot;:&quot;Row680&quot;},{&quot;value&quot;:59.899999999999906,&quot;rowKey&quot;:&quot;Row468&quot;},{&quot;value&quot;:61.1999999999999,&quot;rowKey&quot;:&quot;Row1022&quot;},{&quot;value&quot;:40.5999999999999,&quot;rowKey&quot;:&quot;Row427&quot;},{&quot;value&quot;:299.19999999999993,&quot;rowKey&quot;:&quot;Row879&quot;},{&quot;value&quot;:46.7,&quot;rowKey&quot;:&quot;Row441&quot;},{&quot;value&quot;:61.799999999999905,&quot;rowKey&quot;:&quot;Row954&quot;},{&quot;value&quot;:41.1999999999999,&quot;rowKey&quot;:&quot;Row944&quot;},{&quot;value&quot;:50.1999999999999,&quot;rowKey&quot;:&quot;Row300&quot;},{&quot;value&quot;:63.899999999999906,&quot;rowKey&quot;:&quot;Row700&quot;},{&quot;value&quot;:42.79999999999986,&quot;rowKey&quot;:&quot;Row994&quot;},{&quot;value&quot;:45.0999999999999,&quot;rowKey&quot;:&quot;Row62&quot;},{&quot;value&quot;:47.0999999999999,&quot;rowKey&quot;:&quot;Row765&quot;},{&quot;value&quot;:60.0999999999999,&quot;rowKey&quot;:&quot;Row135&quot;},{&quot;value&quot;:55.799999999999905,&quot;rowKey&quot;:&quot;Row756&quot;},{&quot;value&quot;:61.49999999999991,&quot;rowKey&quot;:&quot;Row815&quot;},{&quot;value&quot;:62.89999999999986,&quot;rowKey&quot;:&quot;Row432&quot;},{&quot;value&quot;:37.799999999999905,&quot;rowKey&quot;:&quot;Row1057&quot;},{&quot;value&quot;:50.49999999999991,&quot;rowKey&quot;:&quot;Row687&quot;},{&quot;value&quot;:57.1999999999999,&quot;rowKey&quot;:&quot;Row382&quot;},{&quot;value&quot;:63.299999999999905,&quot;rowKey&quot;:&quot;Row309&quot;},{&quot;value&quot;:59.0999999999999,&quot;rowKey&quot;:&quot;Row446&quot;},{&quot;value&quot;:49.1,&quot;rowKey&quot;:&quot;Row186&quot;},{&quot;value&quot;:38.49999999999991,&quot;rowKey&quot;:&quot;Row1084&quot;},{&quot;value&quot;:44.6999999999999,&quot;rowKey&quot;:&quot;Row410&quot;}],&quot;extremeOutliers&quot;:[],&quot;max&quot;:312.19999999999993,&quot;median&quot;:189.89999999999992,&quot;lowerWhisker&quot;:64.7999999999999,&quot;upperQuartile&quot;:207.79999999999993,&quot;lowerQuartile&quot;:150.49999999999991,&quot;upperWhisker&quot;:292.7999999999999}},&quot;max_wind_speed_9am&quot;:{&quot;Low&quot;:{&quot;min&quot;:1.1855782000000479,&quot;mildOutliers&quot;:[{&quot;value&quot;:27.535059688419707,&quot;rowKey&quot;:&quot;Row496&quot;},{&quot;value&quot;:26.351153199999963,&quot;rowKey&quot;:&quot;Row653&quot;},{&quot;value&quot;:25.815630616587683,&quot;rowKey&quot;:&quot;Row926&quot;},{&quot;value&quot;:29.84077959999996,&quot;rowKey&quot;:&quot;Row97&quot;},{&quot;value&quot;:26.449104753251678,&quot;rowKey&quot;:&quot;Row308&quot;},{&quot;value&quot;:25.859026399999944,&quot;rowKey&quot;:&quot;Row706&quot;},{&quot;value&quot;:26.798541199999963,&quot;rowKey&quot;:&quot;Row912&quot;},{&quot;value&quot;:26.659596259928634,&quot;rowKey&quot;:&quot;Row577&quot;}],&quot;extremeOutliers&quot;:[],&quot;max&quot;:29.84077959999996,&quot;median&quot;:5.407997885014494,&quot;lowerWhisker&quot;:1.1855782000000479,&quot;upperQuartile&quot;:12.325539400000014,&quot;lowerQuartile&quot;:3.344163655425768,&quot;upperWhisker&quot;:25.635332399999943},&quot;Not_low&quot;:{&quot;min&quot;:1.2303169999999182,&quot;mildOutliers&quot;:[{&quot;value&quot;:13.399270599999836,&quot;rowKey&quot;:&quot;Row570&quot;},{&quot;value&quot;:15.367777799999873,&quot;rowKey&quot;:&quot;Row922&quot;},{&quot;value&quot;:13.69007280000004,&quot;rowKey&quot;:&quot;Row343&quot;},{&quot;value&quot;:14.405893599999894,&quot;rowKey&quot;:&quot;Row832&quot;},{&quot;value&quot;:16.486247799999934,&quot;rowKey&quot;:&quot;Row656&quot;},{&quot;value&quot;:18.074475199999974,&quot;rowKey&quot;:&quot;Row1009&quot;},{&quot;value&quot;:14.159830199999975,&quot;rowKey&quot;:&quot;Row764&quot;},{&quot;value&quot;:15.099344999999769,&quot;rowKey&quot;:&quot;Row250&quot;},{&quot;value&quot;:13.8466585999999,&quot;rowKey&quot;:&quot;Row710&quot;},{&quot;value&quot;:17.76130359999999,&quot;rowKey&quot;:&quot;Row204&quot;},{&quot;value&quot;:14.182199599999905,&quot;rowKey&quot;:&quot;Row288&quot;},{&quot;value&quot;:15.3677778,&quot;rowKey&quot;:&quot;Row75&quot;},{&quot;value&quot;:13.4440093999999,&quot;rowKey&quot;:&quot;Row132&quot;},{&quot;value&quot;:18.27579979999991,&quot;rowKey&quot;:&quot;Row224&quot;},{&quot;value&quot;:16.553356000000033,&quot;rowKey&quot;:&quot;Row660&quot;},{&quot;value&quot;:13.511117599999983,&quot;rowKey&quot;:&quot;Row856&quot;},{&quot;value&quot;:18.81266539999988,&quot;rowKey&quot;:&quot;Row736&quot;},{&quot;value&quot;:17.6047177999999,&quot;rowKey&quot;:&quot;Row546&quot;},{&quot;value&quot;:14.92038979999998,&quot;rowKey&quot;:&quot;Row532&quot;},{&quot;value&quot;:18.052105799999982,&quot;rowKey&quot;:&quot;Row169&quot;},{&quot;value&quot;:18.029736400000044,&quot;rowKey&quot;:&quot;Row61&quot;},{&quot;value&quot;:14.987497999999949,&quot;rowKey&quot;:&quot;Row1027&quot;},{&quot;value&quot;:15.009867399999937,&quot;rowKey&quot;:&quot;Row248&quot;},{&quot;value&quot;:16.1283374,&quot;rowKey&quot;:&quot;Row670&quot;}],&quot;extremeOutliers&quot;:[{&quot;value&quot;:20.356154000000007,&quot;rowKey&quot;:&quot;Row682&quot;},{&quot;value&quot;:24.472123600000014,&quot;rowKey&quot;:&quot;Row565&quot;},{&quot;value&quot;:23.57734759999993,&quot;rowKey&quot;:&quot;Row336&quot;},{&quot;value&quot;:21.273299399999917,&quot;rowKey&quot;:&quot;Row342&quot;}],&quot;max&quot;:24.472123600000014,&quot;median&quot;:4.56335760000001,&quot;lowerWhisker&quot;:1.2303169999999182,&quot;upperQuartile&quot;:7.0239915999997455,&quot;lowerQuartile&quot;:2.9303913999999978,&quot;upperWhisker&quot;:13.086098999999889}},&quot;rain_accumulation_9am&quot;:{&quot;Low&quot;:{&quot;min&quot;:0.0,&quot;mildOutliers&quot;:[],&quot;extremeOutliers&quot;:[{&quot;value&quot;:0.1710000000000491,&quot;rowKey&quot;:&quot;Row264&quot;},{&quot;value&quot;:0.009999999999990905,&quot;rowKey&quot;:&quot;Row653&quot;},{&quot;value&quot;:0.0035783681465672767,&quot;rowKey&quot;:&quot;Row834&quot;},{&quot;value&quot;:0.027208881037082418,&quot;rowKey&quot;:&quot;Row962&quot;},{&quot;value&quot;:0.018967556239824684,&quot;rowKey&quot;:&quot;Row1007&quot;},{&quot;value&quot;:0.5101961449505528,&quot;rowKey&quot;:&quot;Row447&quot;},{&quot;value&quot;:0.009999999999990905,&quot;rowKey&quot;:&quot;Row72&quot;},{&quot;value&quot;:0.035743013458113385,&quot;rowKey&quot;:&quot;Row157&quot;},{&quot;value&quot;:0.009999999999990905,&quot;rowKey&quot;:&quot;Row671&quot;},{&quot;value&quot;:0.039732047109058935,&quot;rowKey&quot;:&quot;Row755&quot;},{&quot;value&quot;:0.03513844072259895,&quot;rowKey&quot;:&quot;Row713&quot;},{&quot;value&quot;:0.049999999999954525,&quot;rowKey&quot;:&quot;Row97&quot;},{&quot;value&quot;:0.009999999999990905,&quot;rowKey&quot;:&quot;Row454&quot;},{&quot;value&quot;:0.009999999999717017,&quot;rowKey&quot;:&quot;Row401&quot;},{&quot;value&quot;:0.009999999999914654,&quot;rowKey&quot;:&quot;Row540&quot;},{&quot;value&quot;:0.0300000000000864,&quot;rowKey&quot;:&quot;Row600&quot;},{&quot;value&quot;:0.03999999999996362,&quot;rowKey&quot;:&quot;Row87&quot;},{&quot;value&quot;:0.023570581520335546,&quot;rowKey&quot;:&quot;Row496&quot;},{&quot;value&quot;:0.013937081750515404,&quot;rowKey&quot;:&quot;Row449&quot;},{&quot;value&quot;:0.1190000000000282,&quot;rowKey&quot;:&quot;Row706&quot;},{&quot;value&quot;:0.46952589431905056,&quot;rowKey&quot;:&quot;Row750&quot;},{&quot;value&quot;:1.2095911252773053E-5,&quot;rowKey&quot;:&quot;Row349&quot;},{&quot;value&quot;:0.009999999999870834,&quot;rowKey&quot;:&quot;Row937&quot;},{&quot;value&quot;:0.049999999999954525,&quot;rowKey&quot;:&quot;Row574&quot;},{&quot;value&quot;:0.002651296088119505,&quot;rowKey&quot;:&quot;Row541&quot;},{&quot;value&quot;:1.3022004611203493,&quot;rowKey&quot;:&quot;Row797&quot;},{&quot;value&quot;:0.031174101937456185,&quot;rowKey&quot;:&quot;Row86&quot;},{&quot;value&quot;:1.5299999999997451,&quot;rowKey&quot;:&quot;Row192&quot;},{&quot;value&quot;:0.01766519033120803,&quot;rowKey&quot;:&quot;Row1000&quot;},{&quot;value&quot;:0.008948746629379094,&quot;rowKey&quot;:&quot;Row550&quot;},{&quot;value&quot;:0.0011944969817215979,&quot;rowKey&quot;:&quot;Row577&quot;},{&quot;value&quot;:0.006534604293119271,&quot;rowKey&quot;:&quot;Row477&quot;},{&quot;value&quot;:0.009999999999308784,&quot;rowKey&quot;:&quot;Row793&quot;}],&quot;max&quot;:1.5299999999997451,&quot;median&quot;:0.0,&quot;lowerWhisker&quot;:0.0,&quot;upperQuartile&quot;:0.0,&quot;lowerQuartile&quot;:0.0,&quot;upperWhisker&quot;:0.0},&quot;Not_low&quot;:{&quot;min&quot;:0.0,&quot;mildOutliers&quot;:[],&quot;extremeOutliers&quot;:[{&quot;value&quot;:0.01000000000021828,&quot;rowKey&quot;:&quot;Row1009&quot;},{&quot;value&quot;:0.01999999999998181,&quot;rowKey&quot;:&quot;Row74&quot;},{&quot;value&quot;:0.009999999999308784,&quot;rowKey&quot;:&quot;Row189&quot;},{&quot;value&quot;:0.7599999999998772,&quot;rowKey&quot;:&quot;Row976&quot;},{&quot;value&quot;:17.615999999999982,&quot;rowKey&quot;:&quot;Row880&quot;},{&quot;value&quot;:0.5599999999999454,&quot;rowKey&quot;:&quot;Row248&quot;},{&quot;value&quot;:2.7400000000003497,&quot;rowKey&quot;:&quot;Row438&quot;},{&quot;value&quot;:0.020999999999958163,&quot;rowKey&quot;:&quot;Row46&quot;},{&quot;value&quot;:0.05000000000006821,&quot;rowKey&quot;:&quot;Row105&quot;},{&quot;value&quot;:1.4799999999999045,&quot;rowKey&quot;:&quot;Row535&quot;},{&quot;value&quot;:0.009999999999990905,&quot;rowKey&quot;:&quot;Row626&quot;},{&quot;value&quot;:0.3699999999996635,&quot;rowKey&quot;:&quot;Row98&quot;},{&quot;value&quot;:0.06000000000040018,&quot;rowKey&quot;:&quot;Row215&quot;},{&quot;value&quot;:0.07999999999992724,&quot;rowKey&quot;:&quot;Row213&quot;},{&quot;value&quot;:0.2100000000000364,&quot;rowKey&quot;:&quot;Row858&quot;},{&quot;value&quot;:0.5299999999999727,&quot;rowKey&quot;:&quot;Row779&quot;},{&quot;value&quot;:8.739999999999782,&quot;rowKey&quot;:&quot;Row55&quot;},{&quot;value&quot;:0.5729999999999791,&quot;rowKey&quot;:&quot;Row870&quot;},{&quot;value&quot;:18.080000000000037,&quot;rowKey&quot;:&quot;Row984&quot;},{&quot;value&quot;:0.01999999999998181,&quot;rowKey&quot;:&quot;Row310&quot;},{&quot;value&quot;:8.899999999998613,&quot;rowKey&quot;:&quot;Row4&quot;},{&quot;value&quot;:1.750000000000682,&quot;rowKey&quot;:&quot;Row502&quot;},{&quot;value&quot;:4.970000000000142,&quot;rowKey&quot;:&quot;Row670&quot;},{&quot;value&quot;:0.8940000000000055,&quot;rowKey&quot;:&quot;Row436&quot;},{&quot;value&quot;:0.03999999999996362,&quot;rowKey&quot;:&quot;Row798&quot;},{&quot;value&quot;:0.02999999999997272,&quot;rowKey&quot;:&quot;Row336&quot;},{&quot;value&quot;:0.3699999999996635,&quot;rowKey&quot;:&quot;Row605&quot;},{&quot;value&quot;:0.18000000000006364,&quot;rowKey&quot;:&quot;Row642&quot;},{&quot;value&quot;:0.009999999999990905,&quot;rowKey&quot;:&quot;Row229&quot;},{&quot;value&quot;:0.04000000000075943,&quot;rowKey&quot;:&quot;Row387&quot;},{&quot;value&quot;:0.2599999999998772,&quot;rowKey&quot;:&quot;Row613&quot;},{&quot;value&quot;:0.75,&quot;rowKey&quot;:&quot;Row790&quot;},{&quot;value&quot;:3.1299999999999955,&quot;rowKey&quot;:&quot;Row490&quot;},{&quot;value&quot;:0.4700000000000273,&quot;rowKey&quot;:&quot;Row85&quot;},{&quot;value&quot;:2.0300000000000864,&quot;rowKey&quot;:&quot;Row604&quot;},{&quot;value&quot;:0.02000000000043656,&quot;rowKey&quot;:&quot;Row641&quot;},{&quot;value&quot;:0.009999999999990905,&quot;rowKey&quot;:&quot;Row736&quot;},{&quot;value&quot;:0.27000000000043656,&quot;rowKey&quot;:&quot;Row636&quot;},{&quot;value&quot;:0.4900000000016007,&quot;rowKey&quot;:&quot;Row551&quot;},{&quot;value&quot;:5.2720000000002765,&quot;rowKey&quot;:&quot;Row1027&quot;},{&quot;value&quot;:0.04999999999972715,&quot;rowKey&quot;:&quot;Row232&quot;},{&quot;value&quot;:0.7249999999996817,&quot;rowKey&quot;:&quot;Row299&quot;},{&quot;value&quot;:3.1709999999999354,&quot;rowKey&quot;:&quot;Row848&quot;},{&quot;value&quot;:0.009999999999990905,&quot;rowKey&quot;:&quot;Row151&quot;},{&quot;value&quot;:20.01999999999964,&quot;rowKey&quot;:&quot;Row106&quot;},{&quot;value&quot;:0.010000000000331966,&quot;rowKey&quot;:&quot;Row1018&quot;},{&quot;value&quot;:0.07999999999992724,&quot;rowKey&quot;:&quot;Row61&quot;},{&quot;value&quot;:0.16000000000167347,&quot;rowKey&quot;:&quot;Row474&quot;},{&quot;value&quot;:0.0595000000000141,&quot;rowKey&quot;:&quot;Row705&quot;},{&quot;value&quot;:0.02000000000043656,&quot;rowKey&quot;:&quot;Row5&quot;},{&quot;value&quot;:0.02000000000043656,&quot;rowKey&quot;:&quot;Row243&quot;},{&quot;value&quot;:0.029999999999745338,&quot;rowKey&quot;:&quot;Row169&quot;},{&quot;value&quot;:0.02000000000043656,&quot;rowKey&quot;:&quot;Row303&quot;},{&quot;value&quot;:0.9800000000003593,&quot;rowKey&quot;:&quot;Row204&quot;},{&quot;value&quot;:0.17999999999994998,&quot;rowKey&quot;:&quot;Row404&quot;},{&quot;value&quot;:0.02000000000043656,&quot;rowKey&quot;:&quot;Row829&quot;},{&quot;value&quot;:9.04999999999984,&quot;rowKey&quot;:&quot;Row565&quot;},{&quot;value&quot;:3.6000000000000227,&quot;rowKey&quot;:&quot;Row324&quot;},{&quot;value&quot;:0.009999999999990905,&quot;rowKey&quot;:&quot;Row1002&quot;},{&quot;value&quot;:0.07000000000005002,&quot;rowKey&quot;:&quot;Row568&quot;},{&quot;value&quot;:0.8599999999999001,&quot;rowKey&quot;:&quot;Row268&quot;},{&quot;value&quot;:0.22000000000002728,&quot;rowKey&quot;:&quot;Row701&quot;},{&quot;value&quot;:0.0049999999999954525,&quot;rowKey&quot;:&quot;Row334&quot;},{&quot;value&quot;:0.3900000000005548,&quot;rowKey&quot;:&quot;Row925&quot;},{&quot;value&quot;:24.01999999999907,&quot;rowKey&quot;:&quot;Row283&quot;},{&quot;value&quot;:0.10000000000002274,&quot;rowKey&quot;:&quot;Row663&quot;},{&quot;value&quot;:22.02199999999948,&quot;rowKey&quot;:&quot;Row932&quot;},{&quot;value&quot;:0.2390000000007149,&quot;rowKey&quot;:&quot;Row747&quot;},{&quot;value&quot;:0.09000000000003182,&quot;rowKey&quot;:&quot;Row493&quot;},{&quot;value&quot;:1.5299999999997451,&quot;rowKey&quot;:&quot;Row42&quot;},{&quot;value&quot;:0.01000000000021828,&quot;rowKey&quot;:&quot;Row1011&quot;},{&quot;value&quot;:0.06999999999993634,&quot;rowKey&quot;:&quot;Row342&quot;},{&quot;value&quot;:6.025000000000659,&quot;rowKey&quot;:&quot;Row687&quot;},{&quot;value&quot;:3.7099999999999222,&quot;rowKey&quot;:&quot;Row487&quot;},{&quot;value&quot;:1.6300000000002228,&quot;rowKey&quot;:&quot;Row624&quot;},{&quot;value&quot;:5.559999999999945,&quot;rowKey&quot;:&quot;Row806&quot;},{&quot;value&quot;:0.049999999999954525,&quot;rowKey&quot;:&quot;Row876&quot;},{&quot;value&quot;:2.6900000000005093,&quot;rowKey&quot;:&quot;Row813&quot;},{&quot;value&quot;:0.019999999999527063,&quot;rowKey&quot;:&quot;Row596&quot;},{&quot;value&quot;:0.5499999999999545,&quot;rowKey&quot;:&quot;Row11&quot;},{&quot;value&quot;:0.009999999999990905,&quot;rowKey&quot;:&quot;Row690&quot;},{&quot;value&quot;:4.711999999999988,&quot;rowKey&quot;:&quot;Row517&quot;},{&quot;value&quot;:14.626999999999953,&quot;rowKey&quot;:&quot;Row546&quot;},{&quot;value&quot;:5.0599999999996035,&quot;rowKey&quot;:&quot;Row856&quot;},{&quot;value&quot;:0.11999999999989085,&quot;rowKey&quot;:&quot;Row665&quot;},{&quot;value&quot;:0.11999999999989085,&quot;rowKey&quot;:&quot;Row802&quot;},{&quot;value&quot;:0.009999999999990905,&quot;rowKey&quot;:&quot;Row335&quot;},{&quot;value&quot;:0.03999999999996362,&quot;rowKey&quot;:&quot;Row467&quot;},{&quot;value&quot;:0.009999999999990905,&quot;rowKey&quot;:&quot;Row852&quot;},{&quot;value&quot;:0.01999999999998181,&quot;rowKey&quot;:&quot;Row291&quot;},{&quot;value&quot;:1.7999999999998408,&quot;rowKey&quot;:&quot;Row871&quot;},{&quot;value&quot;:0.008000000000151886,&quot;rowKey&quot;:&quot;Row764&quot;},{&quot;value&quot;:0.08000000000015461,&quot;rowKey&quot;:&quot;Row1059&quot;},{&quot;value&quot;:0.07999999999992724,&quot;rowKey&quot;:&quot;Row561&quot;}],&quot;max&quot;:24.01999999999907,&quot;median&quot;:0.0,&quot;lowerWhisker&quot;:0.0,&quot;upperQuartile&quot;:0.0,&quot;lowerQuartile&quot;:0.0,&quot;upperWhisker&quot;:0.0}},&quot;rain_duration_9am&quot;:{&quot;Low&quot;:{&quot;min&quot;:0.0,&quot;mildOutliers&quot;:[],&quot;extremeOutliers&quot;:[{&quot;value&quot;:1455.9723733018732,&quot;rowKey&quot;:&quot;Row750&quot;},{&quot;value&quot;:1.540448293903676,&quot;rowKey&quot;:&quot;Row71&quot;},{&quot;value&quot;:3.5793110960611765,&quot;rowKey&quot;:&quot;Row803&quot;},{&quot;value&quot;:40.0,&quot;rowKey&quot;:&quot;Row600&quot;},{&quot;value&quot;:10.0,&quot;rowKey&quot;:&quot;Row539&quot;},{&quot;value&quot;:293.0332248363926,&quot;rowKey&quot;:&quot;Row755&quot;},{&quot;value&quot;:1510.9067873250533,&quot;rowKey&quot;:&quot;Row447&quot;},{&quot;value&quot;:19.348383717071748,&quot;rowKey&quot;:&quot;Row1044&quot;},{&quot;value&quot;:84.71921859065172,&quot;rowKey&quot;:&quot;Row937&quot;},{&quot;value&quot;:17.747367462843616,&quot;rowKey&quot;:&quot;Row298&quot;},{&quot;value&quot;:54.01525312295424,&quot;rowKey&quot;:&quot;Row401&quot;},{&quot;value&quot;:142.2566717988145,&quot;rowKey&quot;:&quot;Row1007&quot;},{&quot;value&quot;:50.0,&quot;rowKey&quot;:&quot;Row671&quot;},{&quot;value&quot;:10.0,&quot;rowKey&quot;:&quot;Row1076&quot;},{&quot;value&quot;:204.06660777830373,&quot;rowKey&quot;:&quot;Row962&quot;},{&quot;value&quot;:4.735033634019899,&quot;rowKey&quot;:&quot;Row731&quot;},{&quot;value&quot;:18.582775667300353,&quot;rowKey&quot;:&quot;Row449&quot;},{&quot;value&quot;:0.644104629533544,&quot;rowKey&quot;:&quot;Row450&quot;},{&quot;value&quot;:90.0,&quot;rowKey&quot;:&quot;Row454&quot;},{&quot;value&quot;:40.364018158337934,&quot;rowKey&quot;:&quot;Row361&quot;},{&quot;value&quot;:300.0,&quot;rowKey&quot;:&quot;Row87&quot;},{&quot;value&quot;:20.0,&quot;rowKey&quot;:&quot;Row865&quot;},{&quot;value&quot;:40.0,&quot;rowKey&quot;:&quot;Row819&quot;},{&quot;value&quot;:10.0,&quot;rowKey&quot;:&quot;Row501&quot;},{&quot;value&quot;:32.0,&quot;rowKey&quot;:&quot;Row912&quot;},{&quot;value&quot;:4310.0,&quot;rowKey&quot;:&quot;Row192&quot;},{&quot;value&quot;:9.397156950665053,&quot;rowKey&quot;:&quot;Row88&quot;},{&quot;value&quot;:19.026476280554146,&quot;rowKey&quot;:&quot;Row855&quot;},{&quot;value&quot;:999.0,&quot;rowKey&quot;:&quot;Row264&quot;},{&quot;value&quot;:10.0,&quot;rowKey&quot;:&quot;Row906&quot;},{&quot;value&quot;:10.0,&quot;rowKey&quot;:&quot;Row234&quot;},{&quot;value&quot;:6.02967293132648,&quot;rowKey&quot;:&quot;Row1039&quot;},{&quot;value&quot;:47.15673629362924,&quot;rowKey&quot;:&quot;Row834&quot;},{&quot;value&quot;:268.0726009360942,&quot;rowKey&quot;:&quot;Row157&quot;},{&quot;value&quot;:13.864944174475234,&quot;rowKey&quot;:&quot;Row627&quot;},{&quot;value&quot;:10.0,&quot;rowKey&quot;:&quot;Row555&quot;},{&quot;value&quot;:138.0,&quot;rowKey&quot;:&quot;Row653&quot;},{&quot;value&quot;:7.916181494059931,&quot;rowKey&quot;:&quot;Row646&quot;},{&quot;value&quot;:20.0,&quot;rowKey&quot;:&quot;Row191&quot;},{&quot;value&quot;:13.958908051526596,&quot;rowKey&quot;:&quot;Row666&quot;},{&quot;value&quot;:34.15009456710083,&quot;rowKey&quot;:&quot;Row577&quot;},{&quot;value&quot;:70.52665037198926,&quot;rowKey&quot;:&quot;Row86&quot;},{&quot;value&quot;:60.0,&quot;rowKey&quot;:&quot;Row793&quot;},{&quot;value&quot;:10.0,&quot;rowKey&quot;:&quot;Row397&quot;},{&quot;value&quot;:125.10794755566087,&quot;rowKey&quot;:&quot;Row496&quot;},{&quot;value&quot;:18.414497645409533,&quot;rowKey&quot;:&quot;Row904&quot;},{&quot;value&quot;:40.0,&quot;rowKey&quot;:&quot;Row941&quot;},{&quot;value&quot;:30.0,&quot;rowKey&quot;:&quot;Row924&quot;},{&quot;value&quot;:75.86295265396464,&quot;rowKey&quot;:&quot;Row72&quot;},{&quot;value&quot;:263.53830541973184,&quot;rowKey&quot;:&quot;Row713&quot;},{&quot;value&quot;:100.0,&quot;rowKey&quot;:&quot;Row97&quot;},{&quot;value&quot;:51.11785752488773,&quot;rowKey&quot;:&quot;Row540&quot;},{&quot;value&quot;:10.0,&quot;rowKey&quot;:&quot;Row422&quot;},{&quot;value&quot;:10.524042470520353,&quot;rowKey&quot;:&quot;Row659&quot;},{&quot;value&quot;:67.11559972040425,&quot;rowKey&quot;:&quot;Row550&quot;},{&quot;value&quot;:8.21318717287235,&quot;rowKey&quot;:&quot;Row165&quot;},{&quot;value&quot;:34.2315972888234,&quot;rowKey&quot;:&quot;Row308&quot;},{&quot;value&quot;:100.0,&quot;rowKey&quot;:&quot;Row574&quot;},{&quot;value&quot;:16.36262181218849,&quot;rowKey&quot;:&quot;Row544&quot;},{&quot;value&quot;:38.27713741228234,&quot;rowKey&quot;:&quot;Row926&quot;},{&quot;value&quot;:49.0095321984391,&quot;rowKey&quot;:&quot;Row477&quot;},{&quot;value&quot;:681.0,&quot;rowKey&quot;:&quot;Row706&quot;},{&quot;value&quot;:6.534115493300479,&quot;rowKey&quot;:&quot;Row179&quot;},{&quot;value&quot;:8.629790423297322,&quot;rowKey&quot;:&quot;Row889&quot;},{&quot;value&quot;:42.65129608812192,&quot;rowKey&quot;:&quot;Row541&quot;},{&quot;value&quot;:23.55358710820954,&quot;rowKey&quot;:&quot;Row1000&quot;},{&quot;value&quot;:20.0,&quot;rowKey&quot;:&quot;Row2&quot;},{&quot;value&quot;:20.04838364501444,&quot;rowKey&quot;:&quot;Row349&quot;},{&quot;value&quot;:3662.0026630524376,&quot;rowKey&quot;:&quot;Row797&quot;},{&quot;value&quot;:10.0,&quot;rowKey&quot;:&quot;Row170&quot;},{&quot;value&quot;:11.21743411113209,&quot;rowKey&quot;:&quot;Row1012&quot;},{&quot;value&quot;:11.024880886414453,&quot;rowKey&quot;:&quot;Row1037&quot;},{&quot;value&quot;:17.9446538231057,&quot;rowKey&quot;:&quot;Row722&quot;}],&quot;max&quot;:4310.0,&quot;median&quot;:0.0,&quot;lowerWhisker&quot;:0.0,&quot;upperQuartile&quot;:0.0,&quot;lowerQuartile&quot;:0.0,&quot;upperWhisker&quot;:0.0},&quot;Not_low&quot;:{&quot;min&quot;:0.0,&quot;mildOutliers&quot;:[],&quot;extremeOutliers&quot;:[{&quot;value&quot;:7000.0,&quot;rowKey&quot;:&quot;Row55&quot;},{&quot;value&quot;:75.0,&quot;rowKey&quot;:&quot;Row1009&quot;},{&quot;value&quot;:5558.0,&quot;rowKey&quot;:&quot;Row299&quot;},{&quot;value&quot;:20.0,&quot;rowKey&quot;:&quot;Row583&quot;},{&quot;value&quot;:1860.0,&quot;rowKey&quot;:&quot;Row624&quot;},{&quot;value&quot;:250.0,&quot;rowKey&quot;:&quot;Row310&quot;},{&quot;value&quot;:460.0,&quot;rowKey&quot;:&quot;Row105&quot;},{&quot;value&quot;:2981.0,&quot;rowKey&quot;:&quot;Row436&quot;},{&quot;value&quot;:40.0,&quot;rowKey&quot;:&quot;Row775&quot;},{&quot;value&quot;:20.0,&quot;rowKey&quot;:&quot;Row736&quot;},{&quot;value&quot;:10.0,&quot;rowKey&quot;:&quot;Row323&quot;},{&quot;value&quot;:10.0,&quot;rowKey&quot;:&quot;Row151&quot;},{&quot;value&quot;:6440.0,&quot;rowKey&quot;:&quot;Row813&quot;},{&quot;value&quot;:170.0,&quot;rowKey&quot;:&quot;Row5&quot;},{&quot;value&quot;:20.0,&quot;rowKey&quot;:&quot;Row821&quot;},{&quot;value&quot;:240.0,&quot;rowKey&quot;:&quot;Row291&quot;},{&quot;value&quot;:110.0,&quot;rowKey&quot;:&quot;Row1011&quot;},{&quot;value&quot;:6160.0,&quot;rowKey&quot;:&quot;Row502&quot;},{&quot;value&quot;:310.0,&quot;rowKey&quot;:&quot;Row636&quot;},{&quot;value&quot;:2230.0,&quot;rowKey&quot;:&quot;Row605&quot;},{&quot;value&quot;:270.0,&quot;rowKey&quot;:&quot;Row568&quot;},{&quot;value&quot;:10.0,&quot;rowKey&quot;:&quot;Row217&quot;},{&quot;value&quot;:1030.0,&quot;rowKey&quot;:&quot;Row85&quot;},{&quot;value&quot;:6950.0,&quot;rowKey&quot;:&quot;Row268&quot;},{&quot;value&quot;:30.0,&quot;rowKey&quot;:&quot;Row690&quot;},{&quot;value&quot;:400.0,&quot;rowKey&quot;:&quot;Row342&quot;},{&quot;value&quot;:2891.0,&quot;rowKey&quot;:&quot;Row848&quot;},{&quot;value&quot;:40.0,&quot;rowKey&quot;:&quot;Row224&quot;},{&quot;value&quot;:5930.0,&quot;rowKey&quot;:&quot;Row604&quot;},{&quot;value&quot;:140.0,&quot;rowKey&quot;:&quot;Row189&quot;},{&quot;value&quot;:2940.0,&quot;rowKey&quot;:&quot;Row779&quot;},{&quot;value&quot;:80.0,&quot;rowKey&quot;:&quot;Row348&quot;},{&quot;value&quot;:4900.0,&quot;rowKey&quot;:&quot;Row535&quot;},{&quot;value&quot;:120.0,&quot;rowKey&quot;:&quot;Row641&quot;},{&quot;value&quot;:2630.0,&quot;rowKey&quot;:&quot;Row551&quot;},{&quot;value&quot;:200.0,&quot;rowKey&quot;:&quot;Row798&quot;},{&quot;value&quot;:319.0,&quot;rowKey&quot;:&quot;Row46&quot;},{&quot;value&quot;:250.0,&quot;rowKey&quot;:&quot;Row642&quot;},{&quot;value&quot;:5420.0,&quot;rowKey&quot;:&quot;Row42&quot;},{&quot;value&quot;:60.0,&quot;rowKey&quot;:&quot;Row243&quot;},{&quot;value&quot;:7825.0,&quot;rowKey&quot;:&quot;Row546&quot;},{&quot;value&quot;:3079.0,&quot;rowKey&quot;:&quot;Row204&quot;},{&quot;value&quot;:1770.0,&quot;rowKey&quot;:&quot;Row11&quot;},{&quot;value&quot;:17704.0,&quot;rowKey&quot;:&quot;Row565&quot;},{&quot;value&quot;:10.0,&quot;rowKey&quot;:&quot;Row626&quot;},{&quot;value&quot;:167.0,&quot;rowKey&quot;:&quot;Row829&quot;},{&quot;value&quot;:10725.0,&quot;rowKey&quot;:&quot;Row1027&quot;},{&quot;value&quot;:14342.0,&quot;rowKey&quot;:&quot;Row687&quot;},{&quot;value&quot;:90.0,&quot;rowKey&quot;:&quot;Row246&quot;},{&quot;value&quot;:2170.0,&quot;rowKey&quot;:&quot;Row98&quot;},{&quot;value&quot;:3910.0,&quot;rowKey&quot;:&quot;Row790&quot;},{&quot;value&quot;:10970.0,&quot;rowKey&quot;:&quot;Row324&quot;},{&quot;value&quot;:600.0,&quot;rowKey&quot;:&quot;Row467&quot;},{&quot;value&quot;:34.0,&quot;rowKey&quot;:&quot;Row764&quot;},{&quot;value&quot;:70.0,&quot;rowKey&quot;:&quot;Row194&quot;},{&quot;value&quot;:520.0,&quot;rowKey&quot;:&quot;Row1059&quot;},{&quot;value&quot;:410.0,&quot;rowKey&quot;:&quot;Row802&quot;},{&quot;value&quot;:540.0,&quot;rowKey&quot;:&quot;Row493&quot;},{&quot;value&quot;:360.0,&quot;rowKey&quot;:&quot;Row665&quot;},{&quot;value&quot;:80.0,&quot;rowKey&quot;:&quot;Row852&quot;},{&quot;value&quot;:15849.0,&quot;rowKey&quot;:&quot;Row438&quot;},{&quot;value&quot;:220.0,&quot;rowKey&quot;:&quot;Row596&quot;},{&quot;value&quot;:900.0,&quot;rowKey&quot;:&quot;Row925&quot;},{&quot;value&quot;:5820.0,&quot;rowKey&quot;:&quot;Row806&quot;},{&quot;value&quot;:20.0,&quot;rowKey&quot;:&quot;Row229&quot;},{&quot;value&quot;:40.0,&quot;rowKey&quot;:&quot;Row316&quot;},{&quot;value&quot;:180.0,&quot;rowKey&quot;:&quot;Row74&quot;},{&quot;value&quot;:200.0,&quot;rowKey&quot;:&quot;Row1002&quot;},{&quot;value&quot;:330.0,&quot;rowKey&quot;:&quot;Row474&quot;},{&quot;value&quot;:80.0,&quot;rowKey&quot;:&quot;Row869&quot;},{&quot;value&quot;:1153.0,&quot;rowKey&quot;:&quot;Row61&quot;},{&quot;value&quot;:1500.0,&quot;rowKey&quot;:&quot;Row976&quot;},{&quot;value&quot;:250.0,&quot;rowKey&quot;:&quot;Row336&quot;},{&quot;value&quot;:400.0,&quot;rowKey&quot;:&quot;Row663&quot;},{&quot;value&quot;:10560.0,&quot;rowKey&quot;:&quot;Row670&quot;},{&quot;value&quot;:20.0,&quot;rowKey&quot;:&quot;Row38&quot;},{&quot;value&quot;:270.0,&quot;rowKey&quot;:&quot;Row232&quot;},{&quot;value&quot;:70.0,&quot;rowKey&quot;:&quot;Row250&quot;},{&quot;value&quot;:610.0,&quot;rowKey&quot;:&quot;Row858&quot;},{&quot;value&quot;:380.0,&quot;rowKey&quot;:&quot;Row387&quot;},{&quot;value&quot;:15800.0,&quot;rowKey&quot;:&quot;Row984&quot;},{&quot;value&quot;:10.0,&quot;rowKey&quot;:&quot;Row708&quot;},{&quot;value&quot;:397.0,&quot;rowKey&quot;:&quot;Row213&quot;},{&quot;value&quot;:2770.0,&quot;rowKey&quot;:&quot;Row613&quot;},{&quot;value&quot;:1070.0,&quot;rowKey&quot;:&quot;Row701&quot;},{&quot;value&quot;:220.0,&quot;rowKey&quot;:&quot;Row27&quot;},{&quot;value&quot;:14730.0,&quot;rowKey&quot;:&quot;Row4&quot;},{&quot;value&quot;:130.0,&quot;rowKey&quot;:&quot;Row335&quot;},{&quot;value&quot;:8330.0,&quot;rowKey&quot;:&quot;Row880&quot;},{&quot;value&quot;:14842.0,&quot;rowKey&quot;:&quot;Row517&quot;},{&quot;value&quot;:5510.0,&quot;rowKey&quot;:&quot;Row871&quot;},{&quot;value&quot;:293.0,&quot;rowKey&quot;:&quot;Row169&quot;},{&quot;value&quot;:10.0,&quot;rowKey&quot;:&quot;Row1018&quot;},{&quot;value&quot;:9974.0,&quot;rowKey&quot;:&quot;Row932&quot;},{&quot;value&quot;:1480.0,&quot;rowKey&quot;:&quot;Row334&quot;},{&quot;value&quot;:140.0,&quot;rowKey&quot;:&quot;Row876&quot;},{&quot;value&quot;:80.0,&quot;rowKey&quot;:&quot;Row303&quot;},{&quot;value&quot;:11650.0,&quot;rowKey&quot;:&quot;Row106&quot;},{&quot;value&quot;:10329.0,&quot;rowKey&quot;:&quot;Row856&quot;},{&quot;value&quot;:20.0,&quot;rowKey&quot;:&quot;Row637&quot;},{&quot;value&quot;:740.0,&quot;rowKey&quot;:&quot;Row215&quot;},{&quot;value&quot;:1786.0,&quot;rowKey&quot;:&quot;Row747&quot;},{&quot;value&quot;:2495.0,&quot;rowKey&quot;:&quot;Row248&quot;},{&quot;value&quot;:6670.0,&quot;rowKey&quot;:&quot;Row487&quot;},{&quot;value&quot;:6690.0,&quot;rowKey&quot;:&quot;Row283&quot;},{&quot;value&quot;:20.0,&quot;rowKey&quot;:&quot;Row757&quot;},{&quot;value&quot;:150.0,&quot;rowKey&quot;:&quot;Row288&quot;},{&quot;value&quot;:2980.0,&quot;rowKey&quot;:&quot;Row490&quot;},{&quot;value&quot;:1105.0,&quot;rowKey&quot;:&quot;Row870&quot;},{&quot;value&quot;:530.0,&quot;rowKey&quot;:&quot;Row561&quot;},{&quot;value&quot;:1350.0,&quot;rowKey&quot;:&quot;Row404&quot;}],&quot;max&quot;:17704.0,&quot;median&quot;:0.0,&quot;lowerWhisker&quot;:0.0,&quot;upperQuartile&quot;:0.0,&quot;lowerQuartile&quot;:0.0,&quot;upperWhisker&quot;:0.0}},&quot;relative_humidity_9am&quot;:{&quot;Low&quot;:{&quot;min&quot;:6.090000000001012,&quot;mildOutliers&quot;:[{&quot;value&quot;:31.99000000000041,&quot;rowKey&quot;:&quot;Row622&quot;},{&quot;value&quot;:39.18913673816666,&quot;rowKey&quot;:&quot;Row917&quot;},{&quot;value&quot;:36.79000000000008,&quot;rowKey&quot;:&quot;Row192&quot;},{&quot;value&quot;:29.710000000000928,&quot;rowKey&quot;:&quot;Row64&quot;},{&quot;value&quot;:29.99000000000002,&quot;rowKey&quot;:&quot;Row355&quot;},{&quot;value&quot;:31.216076829530063,&quot;rowKey&quot;:&quot;Row400&quot;},{&quot;value&quot;:32.687837986102764,&quot;rowKey&quot;:&quot;Row610&quot;},{&quot;value&quot;:39.68863741496982,&quot;rowKey&quot;:&quot;Row962&quot;},{&quot;value&quot;:30.436397555812206,&quot;rowKey&quot;:&quot;Row1007&quot;},{&quot;value&quot;:31.218566278348693,&quot;rowKey&quot;:&quot;Row86&quot;},{&quot;value&quot;:34.11027704601976,&quot;rowKey&quot;:&quot;Row797&quot;},{&quot;value&quot;:31.62997729604632,&quot;rowKey&quot;:&quot;Row772&quot;},{&quot;value&quot;:34.80775347345449,&quot;rowKey&quot;:&quot;Row731&quot;},{&quot;value&quot;:29.799999999999976,&quot;rowKey&quot;:&quot;Row77&quot;},{&quot;value&quot;:36.13000000000115,&quot;rowKey&quot;:&quot;Row471&quot;},{&quot;value&quot;:29.9200000000001,&quot;rowKey&quot;:&quot;Row888&quot;},{&quot;value&quot;:31.70000000000086,&quot;rowKey&quot;:&quot;Row481&quot;}],&quot;extremeOutliers&quot;:[{&quot;value&quot;:47.520000000000884,&quot;rowKey&quot;:&quot;Row87&quot;},{&quot;value&quot;:47.025091010493824,&quot;rowKey&quot;:&quot;Row755&quot;},{&quot;value&quot;:39.95000000000017,&quot;rowKey&quot;:&quot;Row929&quot;},{&quot;value&quot;:42.83999999999999,&quot;rowKey&quot;:&quot;Row611&quot;},{&quot;value&quot;:44.42683701607818,&quot;rowKey&quot;:&quot;Row750&quot;},{&quot;value&quot;:50.75183903229225,&quot;rowKey&quot;:&quot;Row110&quot;},{&quot;value&quot;:43.52907511701258,&quot;rowKey&quot;:&quot;Row157&quot;},{&quot;value&quot;:43.571198476957775,&quot;rowKey&quot;:&quot;Row713&quot;},{&quot;value&quot;:85.18000000000049,&quot;rowKey&quot;:&quot;Row83&quot;},{&quot;value&quot;:39.93988672379625,&quot;rowKey&quot;:&quot;Row141&quot;}],&quot;max&quot;:85.18000000000049,&quot;median&quot;:15.63975510960444,&quot;lowerWhisker&quot;:6.090000000001012,&quot;upperQuartile&quot;:19.44871508170646,&quot;lowerQuartile&quot;:12.61888904139457,&quot;upperWhisker&quot;:29.66692448068333},&quot;Not_low&quot;:{&quot;min&quot;:7.370000000000948,&quot;mildOutliers&quot;:[],&quot;extremeOutliers&quot;:[],&quot;max&quot;:92.6200000000002,&quot;median&quot;:44.780000000001095,&quot;lowerWhisker&quot;:7.370000000000948,&quot;upperQuartile&quot;:76.67000000000056,&quot;lowerQuartile&quot;:29.460000000001077,&quot;upperWhisker&quot;:92.6200000000002}},&quot;relative_humidity_3pm&quot;:{&quot;Low&quot;:{&quot;min&quot;:5.3000000000006855,&quot;mildOutliers&quot;:[],&quot;extremeOutliers&quot;:[],&quot;max&quot;:24.380000000000344,&quot;median&quot;:17.395000000000312,&quot;lowerWhisker&quot;:5.3000000000006855,&quot;upperQuartile&quot;:20.36218985296779,&quot;lowerQuartile&quot;:13.971797285414759,&quot;upperWhisker&quot;:24.380000000000344},&quot;Not_low&quot;:{&quot;min&quot;:25.110000000000053,&quot;mildOutliers&quot;:[],&quot;extremeOutliers&quot;:[],&quot;max&quot;:92.2500000000003,&quot;median&quot;:52.0700000000005,&quot;lowerWhisker&quot;:25.110000000000053,&quot;upperQuartile&quot;:64.88000000000005,&quot;lowerQuartile&quot;:39.57000000000108,&quot;upperWhisker&quot;:92.2500000000003}}},&quot;ignoredMissVals&quot;:{&quot;number&quot;:{},&quot;air_pressure_9am&quot;:{},&quot;air_temp_9am&quot;:{},&quot;avg_wind_direction_9am&quot;:{},&quot;avg_wind_speed_9am&quot;:{},&quot;max_wind_direction_9am&quot;:{},&quot;max_wind_speed_9am&quot;:{},&quot;rain_accumulation_9am&quot;:{},&quot;rain_duration_9am&quot;:{},&quot;relative_humidity_9am&quot;:{},&quot;relative_humidity_3pm&quot;:{}},&quot;excludedClasses&quot;:{&quot;number&quot;:[],&quot;air_pressure_9am&quot;:[],&quot;air_temp_9am&quot;:[],&quot;avg_wind_direction_9am&quot;:[],&quot;avg_wind_speed_9am&quot;:[],&quot;max_wind_direction_9am&quot;:[],&quot;max_wind_speed_9am&quot;:[],&quot;rain_accumulation_9am&quot;:[],&quot;rain_duration_9am&quot;:[],&quot;relative_humidity_9am&quot;:[],&quot;relative_humidity_3pm&quot;:[]},&quot;catCol&quot;:&quot;Day_Humidity&quot;}"/>
        </config>
        <config key="inObject_1">
            <entry key="jsonValue" type="xstring" isnull="true" value=""/>
        </config>
    </config>
    <entry key="warnMessage" type="xstring" value=""/>
    <entry key="errorMessage" type="xstring" value=""/>
</config>
